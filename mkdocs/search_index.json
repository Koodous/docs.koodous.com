{
    "docs": [
        {
            "location": "/", 
            "text": "Koodous Documentation\n\n\nKoodous is a collaborative platform for Android malware research that combines the power of online analysis tools with social interactions between the analysts over a vast APK repository.\n\n\n\n\nWrite your Yara code\n\n\nWrite your own Yara rules to find interesting Android apps and identify possible threads.\n\n\n\n\nAndroid researching\n\n\nUse our powerful searching system to find the APK your are looking for between million of samples.\n\n\n\n\nNotifications\n\n\nGet noticed about your detections with our notifications system.", 
            "title": "Home"
        }, 
        {
            "location": "/#koodous-documentation", 
            "text": "Koodous is a collaborative platform for Android malware research that combines the power of online analysis tools with social interactions between the analysts over a vast APK repository.", 
            "title": "Koodous Documentation"
        }, 
        {
            "location": "/#write-your-yara-code", 
            "text": "Write your own Yara rules to find interesting Android apps and identify possible threads.", 
            "title": "Write your Yara code"
        }, 
        {
            "location": "/#android-researching", 
            "text": "Use our powerful searching system to find the APK your are looking for between million of samples.", 
            "title": "Android researching"
        }, 
        {
            "location": "/#notifications", 
            "text": "Get noticed about your detections with our notifications system.", 
            "title": "Notifications"
        }, 
        {
            "location": "/web/getting-started/", 
            "text": "Koodous is a collaborative platform focused on the detection of fraudulent patterns in Android applications.\n\n\nMy God, it's full of apps\n\n\nWe provide you literally millions of apks to download and analyze. The repository is constantly being updated with new packages from several sources, both official and unofficial. And here comes the best part: it's totally for free. Yeah, we feel generous.\n\n\nAnalyze by your rules\n\n\nWe love Yara rules, and we thought you could find them useful too. You can write your own rulesets and launch them against any APK of your choice, or just sit back, relax and wait. Our analysis system will apply you rules to every fresh uploaded APK and alert you when a match shows up. \n\n\nGet social\n\n\nOnce analyzed, the voting and commeting systems in every package details screen let you share your findings about any APK with the rest of the community. \n\n\nAlso, we introduce the social Yara rulesets. What if I like the rules that other analyst did? Don't worry, you won't have to do all that copy n' paste. Just follow him and automagically you will be warned when an APK gives a positive for his rules. Awesome, right?\n\n\nKoodous' finest\n\n\nIf the community find your rulesets useful you will accumulate followers and eventually get a high position in our ranking. If you receive such honor, you will be part of the chosen ones that stablish the reputation of the APKs for the mobile application. This means that your Yara rules will help people to be safe, as they will be warned if a app installed in their phones or tablets match them.\n\n\nOr go solo\n\n\nIn the case you prefer not to be affected by the social rulesets in your mobile device, you can link your phone or tablet with you account using our QR Code method. And voil\u00e1! The APKs in your device will only be analysed using your rulesets.", 
            "title": "Getting started"
        }, 
        {
            "location": "/web/getting-started/#my-god-its-full-of-apps", 
            "text": "We provide you literally millions of apks to download and analyze. The repository is constantly being updated with new packages from several sources, both official and unofficial. And here comes the best part: it's totally for free. Yeah, we feel generous.", 
            "title": "My God, it's full of apps"
        }, 
        {
            "location": "/web/getting-started/#analyze-by-your-rules", 
            "text": "We love Yara rules, and we thought you could find them useful too. You can write your own rulesets and launch them against any APK of your choice, or just sit back, relax and wait. Our analysis system will apply you rules to every fresh uploaded APK and alert you when a match shows up.", 
            "title": "Analyze by your rules"
        }, 
        {
            "location": "/web/getting-started/#get-social", 
            "text": "Once analyzed, the voting and commeting systems in every package details screen let you share your findings about any APK with the rest of the community.   Also, we introduce the social Yara rulesets. What if I like the rules that other analyst did? Don't worry, you won't have to do all that copy n' paste. Just follow him and automagically you will be warned when an APK gives a positive for his rules. Awesome, right?", 
            "title": "Get social"
        }, 
        {
            "location": "/web/getting-started/#koodous-finest", 
            "text": "If the community find your rulesets useful you will accumulate followers and eventually get a high position in our ranking. If you receive such honor, you will be part of the chosen ones that stablish the reputation of the APKs for the mobile application. This means that your Yara rules will help people to be safe, as they will be warned if a app installed in their phones or tablets match them.", 
            "title": "Koodous' finest"
        }, 
        {
            "location": "/web/getting-started/#or-go-solo", 
            "text": "In the case you prefer not to be affected by the social rulesets in your mobile device, you can link your phone or tablet with you account using our QR Code method. And voil\u00e1! The APKs in your device will only be analysed using your rulesets.", 
            "title": "Or go solo"
        }, 
        {
            "location": "/web/the-repo/", 
            "text": "The repository screen of Koodous let you search through \nmillions of packages\n looking for any particular application. Once you have found your \"target\", you can access the detailed view, where you can vote, comment, download it and ask for an on-demand analisys. \n\n\n\n\nSearching\n\n\nIn the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match:\n\n\nPartial match fields\n\n\n App name\n\n Developer\n\n\nExact match fields\n\n\n SHA256\n\n SHA1\n\n MD5\n\n Package\n\n\nWhen searching for a particular hash, you must enter \nexactly\n the number of characters it has. This means that if you search for a partial hash, like 0bb9246deae4d3210e06791e9999c45 (notice the last character is left), the search engine will look in any partial match field, probably giving you no results at all. The search engine neither do partial searchs on package names.\n\n\nAt the moment there is no way to tell the search engine what are you looking for. So, if you look for a string i.e. Rockstar, you will have applications and developers which has this string somewhere in its name.\n Look at the next section!\n\n\nAdvanced search\n\n\nWe provide an advance search to do more easy the search of malware o interesting samples. You can filter by tags, filesize, user's rating, ... For instance, if we can find applications with a rating less than -1 and from GooglePlay, you can use \nrating:-1- and tag:googleplay\n. This is usefull to detect applications rated by users that maybe are not detected by any ruleset.\n\n\nAnother interesting search can be: \npackage_name:\"com.whatsapp\" and not developer:\"WhatsApp Inc.\"\n\n\nthe following table describe each of search modifiers availables, you can combine these as you can with \nand\n, \nor\n and \nnot\n.\n\n\n\n\n\n\n\n\nAttribute\n\n\nModificator\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nRating\n\n\nrating:\n\n\nThis modificator is used to obtain application with certain users rating. You can get applications with score greater or equal than 2 with \nrating:2+\n. Or more interesting, with score equal or less than -1 \nrating:-1-\n\n\n\n\n\n\nDeveloper\n\n\ndeveloper:\n\n\nThe developer of each application is extracted from the certificate, and you can search by these using this modificator. For instance: \ndeveloper:\"WhatsApp Inc.\"\n\n\n\n\n\n\nPackage Name\n\n\npackage_name:\n\n\nEach application must have an unique package name, and each update must have the same name. Example: \npackage_name:com.whatsapp\n\n\n\n\n\n\nApp Name\n\n\nappname:\n\n\nThe name of the application, for instance: \nappname:WhatsApp\n\n\n\n\n\n\nFilesize\n\n\nsize:\n\n\nThe filesize of the APK file is, in many times, an indicator of their purpose. You can filter by this parameter with, for instance, for files greater or equal than 1MB: \nsize:1MB+\n, or less than 700KB: \nsize:700KB-\n.\n\n\n\n\n\n\nTag\n\n\ntag:\n\n\nWe tag the samples with interesting word and each user can set by one or more tag to any sample, and you can find for this. For example, finding sample that we know come from Google Play: \ntag:googleplay\n or that any user has tagged as \nbanker\n \ntag:banker\n\n\n\n\n\n\nCertificate\n\n\ncert: or certificate:\n\n\nEach application (as well the well-formed) has signed by a certificate. We have each certificate indexed and you can find by that, concretly by its \nsha1\n. For instance, we know that official Twitter application has \n40F3166BB567D3144BCA7DA466BB948B782270EA\n as sha1 certificate, then, we can found all versions of the official Twitter application with this: \ncert:40F3166BB567D3144BCA7DA466BB948B782270EA\n or \ncertificate:40F3166BB567D3144BCA7DA466BB948B782270EA\n if you want to write a bit more :).\n\n\n\n\n\n\nInstalled on devices\n\n\ninstalled\n\n\nThis search modifier has no parameters. It search only APKs that are installed or sometime was installed in some device. Example: \ninstalled\n or \nnot installed\n\n\n\n\n\n\nDetected by community\n\n\ndetected\n\n\nThis search modifier has no parameters. It search only APKs that has been detected by Koodous community. Example: \ndetected\n or \nnot detected\n\n\n\n\n\n\n\n\nThe detailed view\n\n\nEntering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it.\n\n\nThe comment system is placed on a tab and is pretty straight-forward: write your findings or opinions and push Send. Just remember to be respectful with the rest of the community, do constructive critics and follow the standart netiquette. \n\n\nThe up and down arrows on the right of the application image let you vote if that specific application is trustworthy or not. Please notice is not about how you like an application, but about how safe you think it is. \n\n\nMany APKs contain the \n tag. This only mean that we don't detect a dex file OR a resources file OR a certificate. Many service apps installed on devices by default doesn't have a certificate, for instance, and we consider that it is corrupted.\n\n\nYou can download and send an analysis request using the specific buttons above the app image. \n\n\nInfo tabs\n\n\n\n\nThe \nGeneral info\n tab shows a brief summary of the most identificative information. \n\n\nDepending on the app, another \nMetadata\n tab will appear showing a more complete report with information from Google Play, such as ratings and categories. \n\n\nIf the APK has been analysed, another \nAnalysis\n tab will show the report, also in json format.", 
            "title": "The repository"
        }, 
        {
            "location": "/web/the-repo/#searching", 
            "text": "In the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match:", 
            "title": "Searching"
        }, 
        {
            "location": "/web/the-repo/#partial-match-fields", 
            "text": "App name  Developer", 
            "title": "Partial match fields"
        }, 
        {
            "location": "/web/the-repo/#exact-match-fields", 
            "text": "SHA256  SHA1  MD5  Package  When searching for a particular hash, you must enter  exactly  the number of characters it has. This means that if you search for a partial hash, like 0bb9246deae4d3210e06791e9999c45 (notice the last character is left), the search engine will look in any partial match field, probably giving you no results at all. The search engine neither do partial searchs on package names.  At the moment there is no way to tell the search engine what are you looking for. So, if you look for a string i.e. Rockstar, you will have applications and developers which has this string somewhere in its name.  Look at the next section!", 
            "title": "Exact match fields"
        }, 
        {
            "location": "/web/the-repo/#advanced-search", 
            "text": "We provide an advance search to do more easy the search of malware o interesting samples. You can filter by tags, filesize, user's rating, ... For instance, if we can find applications with a rating less than -1 and from GooglePlay, you can use  rating:-1- and tag:googleplay . This is usefull to detect applications rated by users that maybe are not detected by any ruleset.  Another interesting search can be:  package_name:\"com.whatsapp\" and not developer:\"WhatsApp Inc.\"  the following table describe each of search modifiers availables, you can combine these as you can with  and ,  or  and  not .     Attribute  Modificator  Description      Rating  rating:  This modificator is used to obtain application with certain users rating. You can get applications with score greater or equal than 2 with  rating:2+ . Or more interesting, with score equal or less than -1  rating:-1-    Developer  developer:  The developer of each application is extracted from the certificate, and you can search by these using this modificator. For instance:  developer:\"WhatsApp Inc.\"    Package Name  package_name:  Each application must have an unique package name, and each update must have the same name. Example:  package_name:com.whatsapp    App Name  appname:  The name of the application, for instance:  appname:WhatsApp    Filesize  size:  The filesize of the APK file is, in many times, an indicator of their purpose. You can filter by this parameter with, for instance, for files greater or equal than 1MB:  size:1MB+ , or less than 700KB:  size:700KB- .    Tag  tag:  We tag the samples with interesting word and each user can set by one or more tag to any sample, and you can find for this. For example, finding sample that we know come from Google Play:  tag:googleplay  or that any user has tagged as  banker   tag:banker    Certificate  cert: or certificate:  Each application (as well the well-formed) has signed by a certificate. We have each certificate indexed and you can find by that, concretly by its  sha1 . For instance, we know that official Twitter application has  40F3166BB567D3144BCA7DA466BB948B782270EA  as sha1 certificate, then, we can found all versions of the official Twitter application with this:  cert:40F3166BB567D3144BCA7DA466BB948B782270EA  or  certificate:40F3166BB567D3144BCA7DA466BB948B782270EA  if you want to write a bit more :).    Installed on devices  installed  This search modifier has no parameters. It search only APKs that are installed or sometime was installed in some device. Example:  installed  or  not installed    Detected by community  detected  This search modifier has no parameters. It search only APKs that has been detected by Koodous community. Example:  detected  or  not detected", 
            "title": "Advanced search"
        }, 
        {
            "location": "/web/the-repo/#the-detailed-view", 
            "text": "Entering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it.  The comment system is placed on a tab and is pretty straight-forward: write your findings or opinions and push Send. Just remember to be respectful with the rest of the community, do constructive critics and follow the standart netiquette.   The up and down arrows on the right of the application image let you vote if that specific application is trustworthy or not. Please notice is not about how you like an application, but about how safe you think it is.   Many APKs contain the   tag. This only mean that we don't detect a dex file OR a resources file OR a certificate. Many service apps installed on devices by default doesn't have a certificate, for instance, and we consider that it is corrupted.  You can download and send an analysis request using the specific buttons above the app image.", 
            "title": "The detailed view"
        }, 
        {
            "location": "/web/the-repo/#info-tabs", 
            "text": "The  General info  tab shows a brief summary of the most identificative information.   Depending on the app, another  Metadata  tab will appear showing a more complete report with information from Google Play, such as ratings and categories.   If the APK has been analysed, another  Analysis  tab will show the report, also in json format.", 
            "title": "Info tabs"
        }, 
        {
            "location": "/rest-api/getting-started/", 
            "text": "Getting started\n\n\nThe Koodous public REST API gives you the chance to create your Koodous client for different platforms.\n\n\nCreating an account\n\n\nYou can use our API without any authentication token. However there are some requests that need\nan user token to be done (vote or comment and apk are examples of that kind of requests).\n\n\nTo get your API token just create your account on koodous and check \nyour \nuser settings page\n to get your access token.\n\n\nAuthentication\n\n\nTo use the requests that need authentication you need to specify your user token using \nAuthorization\n header. A request with token \nc080ddd1fab46bc919ca0d62299e9995b1886853\n should looks like follows:\n\n\nGET /apks\nAuthorization: Token c080ddd1fab46bc919ca0d62299e9995b1886853\n\n\n\n\nResponse\n\n\nResponses format are json. The example response of the last request will looks like follows:\n\n\n{\n    \ncount\n: 12312,\n    \nnext\n: \nhttps://api.koodous.com/apks?cursor=cD0yMDE2LTAxLTEzKzEwJTNBMzYlM0EwNyUyQjAwJTNBMDA%3D\n,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \ncreated_on\n: 1429390443,\n            \nrating\n: 0,\n            \nimage\n: \nhttps://cdn1.koodous.com/apk_images/tmpFESIMk\n,\n            \ntags\n: [],\n            \nmd5\n: \nee644f55b915c9fb3362be28647eb976\n,\n            \nsha1\n: \ndee89c3cb639ca791ea3e7e2da3d7b8ac7972e13\n,\n            \nsha256\n: \n4891047860f004894de77b4c8018e3f69bb50a210159b77119e90dcd87860e98\n,\n            \napp\n: \nPornNow\n,\n            \npackage_name\n: \ncom.digitaran.pornnow\n,\n            \ncompany\n: \nDigitaran\n,\n            \ndisplayed_version\n: \n1.0\n,\n            \nsize\n: 1040818,\n            \nstored\n: true,\n            \nanalyzed\n: true,\n            \nis_apk\n: true,\n            \ntrusted\n: false,\n            \ndetected\n: false,\n            \ncorrupted\n: false,\n            \nrepo\n: \n,\n            \non_devices\n: false\n        },\n        ...\n    ]\n}\n\n\n\n\nApi levels\n\n\nDepending on your API level, you can have different limits when interacting with the Koodous API.\n\n\n\n\n\n\n\n\nRange\n\n\nBasic\n\n\nBronze\n\n\nSilver\n\n\nGold\n\n\n\n\n\n\n\n\n\n\nAPK downloads\n\n\n50/day\n\n\n100/day\n\n\n250/day\n\n\n500/day\n\n\n\n\n\n\nAnalysis requests\n\n\n50/day\n\n\n100/day\n\n\n100/day\n\n\n100/day\n\n\n\n\n\n\n\n\nPython example\n\n\nHere you have an example using python and \nrequests library\n:\n\n\nimport requests\n\nurl = \nhttps://api.koodous.com/apks\n\nheaders = {\nAuthorization\n:\nToken c080ddd1fab46fc919ca0d62299e9995b1886853\n}\nr = requests.get(url=url, headers=headers)\n\nr.status_code\n#200\n\nr.json()\n#JSON response\n\n\n\n\nPython API Class\n\n\nThere is a python example class with almost all Koodous API methods, check it out:\n\n\npykoodous.py", 
            "title": "Getting started"
        }, 
        {
            "location": "/rest-api/getting-started/#getting-started", 
            "text": "The Koodous public REST API gives you the chance to create your Koodous client for different platforms.", 
            "title": "Getting started"
        }, 
        {
            "location": "/rest-api/getting-started/#creating-an-account", 
            "text": "You can use our API without any authentication token. However there are some requests that need\nan user token to be done (vote or comment and apk are examples of that kind of requests).  To get your API token just create your account on koodous and check \nyour  user settings page  to get your access token.", 
            "title": "Creating an account"
        }, 
        {
            "location": "/rest-api/getting-started/#authentication", 
            "text": "To use the requests that need authentication you need to specify your user token using  Authorization  header. A request with token  c080ddd1fab46bc919ca0d62299e9995b1886853  should looks like follows:  GET /apks\nAuthorization: Token c080ddd1fab46bc919ca0d62299e9995b1886853", 
            "title": "Authentication"
        }, 
        {
            "location": "/rest-api/getting-started/#response", 
            "text": "Responses format are json. The example response of the last request will looks like follows:  {\n     count : 12312,\n     next :  https://api.koodous.com/apks?cursor=cD0yMDE2LTAxLTEzKzEwJTNBMzYlM0EwNyUyQjAwJTNBMDA%3D ,\n     previous : null,\n     results : [\n        {\n             created_on : 1429390443,\n             rating : 0,\n             image :  https://cdn1.koodous.com/apk_images/tmpFESIMk ,\n             tags : [],\n             md5 :  ee644f55b915c9fb3362be28647eb976 ,\n             sha1 :  dee89c3cb639ca791ea3e7e2da3d7b8ac7972e13 ,\n             sha256 :  4891047860f004894de77b4c8018e3f69bb50a210159b77119e90dcd87860e98 ,\n             app :  PornNow ,\n             package_name :  com.digitaran.pornnow ,\n             company :  Digitaran ,\n             displayed_version :  1.0 ,\n             size : 1040818,\n             stored : true,\n             analyzed : true,\n             is_apk : true,\n             trusted : false,\n             detected : false,\n             corrupted : false,\n             repo :  ,\n             on_devices : false\n        },\n        ...\n    ]\n}", 
            "title": "Response"
        }, 
        {
            "location": "/rest-api/getting-started/#api-levels", 
            "text": "Depending on your API level, you can have different limits when interacting with the Koodous API.     Range  Basic  Bronze  Silver  Gold      APK downloads  50/day  100/day  250/day  500/day    Analysis requests  50/day  100/day  100/day  100/day", 
            "title": "Api levels"
        }, 
        {
            "location": "/rest-api/getting-started/#python-example", 
            "text": "Here you have an example using python and  requests library :  import requests\n\nurl =  https://api.koodous.com/apks \nheaders = { Authorization : Token c080ddd1fab46fc919ca0d62299e9995b1886853 }\nr = requests.get(url=url, headers=headers)\n\nr.status_code\n#200\n\nr.json()\n#JSON response", 
            "title": "Python example"
        }, 
        {
            "location": "/rest-api/getting-started/#python-api-class", 
            "text": "There is a python example class with almost all Koodous API methods, check it out:  pykoodous.py", 
            "title": "Python API Class"
        }, 
        {
            "location": "/rest-api/apks/", 
            "text": "APKs\n\n\nThis method returns a paginated list of apks\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks\n\n\nhttps://api.koodous.com/apks/:sha256\n\n\n\n\nObject details\n\n\n\n\ncreated_on\n \nThe date when apks was created on koodous.\n\n\nrating\n \nA value of users votes\n\n\nimage\n \nAPP image used shown on devices\n\n\nmd5\n \nmd5 hash\n\n\nsha1\n \nsha1 hash\n\n\nsha256\n \nsha256 hash\n\n\napp\n \nApp name shown on devices\n\n\npackage_name\n \napp package identifier\n\n\ncompany\n \nCompany or developer of the app\n\n\ndisplayed_version\n \nAPP version shown on market\n\n\nsize\n \nAPP size in bytes\n\n\nanalyzed\n \nAPK has been analyzed, or not, by koodous system\n\n\ntrusted\n \nAPK is inside Koodous whitelist\n\n\ndetected\n \nAPK has been detected by Koodous community\n\n\ncorrupted\n \nAPK cannot be exectuted correctly\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup\n\n\n?cursor\n \nSpecify cursor of current results\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\n\n\nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n\n\n\n\nSearch, filters and ordering\n\n\n\n\n?search\n _Text that search using fields \napp\n, \npackage_name\n and \ncompany\n\n\n?analyzed=(True|False)\n \nBoolean to filter apks analyzed or not\n\n\n?detected=(True|False)\n \nBoolean to filter apks detected or not by koodous community\n\n\n?md5\n \nmd5 lookup\n\n\n?sha1\n \nsha1 lookup\n\n\n?sha256\n \nsha256 lookup\n\n\n\n\nExamples:\n\n\n\n\nExample: \nhttps://api.koodous.com/apks?search=Facebook\n\n\nExample: \nhttps://api.koodous.com/apks?analyzed=True\n\n\nExample: \nhttps://api.koodous.com/apks?md5=8fee025ee05aa599a29ef6563b24d027\n\n\nExample: \nhttps://api.koodous.com/apks?sha1=1d4d60016e4c404886d5a6e624f0cece6d45bc49\n\n\n\n\nNote:\n Our advanced search system can be used in our API as a simple search, check \nadvanced search section\n\n\nExample request\n\n\nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n\n\nExample result\n\n\n{\n    \nnext\n: \nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \ncreated_on\n: 1429629827,\n            \nrating\n: 0,\n            \nimage\n: \nhttps://koodous.com/media/apk_images/tmpYDOLaE\n,\n            \ntags\n: [],\n            \nmd5\n: \n8fee025ee05aa599a29ef6563b24d027\n,\n            \nsha1\n: \n1d4d60016e4c404886d5a6e624f0cece6d45bc49\n,\n            \nsha256\n: \ncc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\n,\n            \napp\n: \nBarbershop Settings\n,\n            \npackage_name\n: \ncom.hallico.barbershoppole\n,\n            \ncompany\n: \nHallico Corporation\n,\n            \ndisplayed_version\n: \n1.8\n,\n            \nsize\n: 2106565,\n            \nstored\n: true,\n            \nanalyzed\n: true,\n            \ntrusted\n: false,\n            \ndetected\n: false,\n            \ncorrupted\n: false,\n            \nrepo\n: \n\n        },\n        {\n            \ncreated_on\n: 1429629826,\n            \nrating\n: 0,\n            \nimage\n: \nhttps://koodous.com/media/apk_images/tmphKmwA2\n,\n            \ntags\n: [],\n            \nmd5\n: \n795ec6217530a3531c66f3bb99d40802\n,\n            \nsha1\n: \n9eca8b3a3c03542ef890b9074dc09430bf736068\n,\n            \nsha256\n: \n249c7fe2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\n,\n            \napp\n: \n\u79c1\u5bc6\u5feb\u64ad\n,\n            \npackage_name\n: \nafhl.ktld.uysg.ptey\n,\n            \ncompany\n: \nqmnu\n,\n            \ndisplayed_version\n: \n7.8.0\n,\n            \nsize\n: 2337458,\n            \nstored\n: true,\n            \nanalyzed\n: true,\n            \ntrusted\n: false,\n            \ndetected\n: false,\n            \ncorrupted\n: false,\n            \nrepo\n: \n\n        },\n    ]\n}\n\n\n\n\nPython examples\n\n\nA basic APK list request.\n\n\nimport requests\nr = requests.get(url=\nhttps://api.koodous.com/apks\n)\nr.json()\n# {\nnext\n:\nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n, \nprevious\n: null, \nresults\n: [...\n\n\n\n\nAn APK search request\n\n\nimport requests\nparams = {'search':'Whatsapp'}\nr = requests.get(url=\nhttps://api.koodous.com/apks\n, params=params)\nr.json()\n# {\nnext\n:\nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n, \nprevious\n: null, \nresults\n: [...\n\n\n\n\nAn APK detail\n\n\nimport requests\nsha256 = \ncc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\n\nr = requests.get(url=\nhttps://api.koodous.com/apks/%s\n % sha256)\nr.json()\n#{\ncreated_on\n:1429629827,\nrating\n:0,\nimage\n:\nhttps://cdn1.koodous.com/apk_images/2015/4/21/tmpYDOLaE\n,\ntags\n:[],\nmd5\n:\n8fee025ee05aa599a29ef6563b24d027\n...", 
            "title": "APKs"
        }, 
        {
            "location": "/rest-api/apks/#apks", 
            "text": "This method returns a paginated list of apks", 
            "title": "APKs"
        }, 
        {
            "location": "/rest-api/apks/#resource-urls", 
            "text": "https://api.koodous.com/apks  https://api.koodous.com/apks/:sha256", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apks/#object-details", 
            "text": "created_on   The date when apks was created on koodous.  rating   A value of users votes  image   APP image used shown on devices  md5   md5 hash  sha1   sha1 hash  sha256   sha256 hash  app   App name shown on devices  package_name   app package identifier  company   Company or developer of the app  displayed_version   APP version shown on market  size   APP size in bytes  analyzed   APK has been analyzed, or not, by koodous system  trusted   APK is inside Koodous whitelist  detected   APK has been detected by Koodous community  corrupted   APK cannot be exectuted correctly", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/apks/#parameters", 
            "text": ":sha256   sha256 lookup  ?cursor   Specify cursor of current results   Examples:   https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544  https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apks/#search-filters-and-ordering", 
            "text": "?search  _Text that search using fields  app ,  package_name  and  company  ?analyzed=(True|False)   Boolean to filter apks analyzed or not  ?detected=(True|False)   Boolean to filter apks detected or not by koodous community  ?md5   md5 lookup  ?sha1   sha1 lookup  ?sha256   sha256 lookup   Examples:   Example:  https://api.koodous.com/apks?search=Facebook  Example:  https://api.koodous.com/apks?analyzed=True  Example:  https://api.koodous.com/apks?md5=8fee025ee05aa599a29ef6563b24d027  Example:  https://api.koodous.com/apks?sha1=1d4d60016e4c404886d5a6e624f0cece6d45bc49   Note:  Our advanced search system can be used in our API as a simple search, check  advanced search section", 
            "title": "Search, filters and ordering"
        }, 
        {
            "location": "/rest-api/apks/#example-request", 
            "text": "https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apks/#example-result", 
            "text": "{\n     next :  https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D ,\n     previous : null,\n     results : [\n        {\n             created_on : 1429629827,\n             rating : 0,\n             image :  https://koodous.com/media/apk_images/tmpYDOLaE ,\n             tags : [],\n             md5 :  8fee025ee05aa599a29ef6563b24d027 ,\n             sha1 :  1d4d60016e4c404886d5a6e624f0cece6d45bc49 ,\n             sha256 :  cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544 ,\n             app :  Barbershop Settings ,\n             package_name :  com.hallico.barbershoppole ,\n             company :  Hallico Corporation ,\n             displayed_version :  1.8 ,\n             size : 2106565,\n             stored : true,\n             analyzed : true,\n             trusted : false,\n             detected : false,\n             corrupted : false,\n             repo :  \n        },\n        {\n             created_on : 1429629826,\n             rating : 0,\n             image :  https://koodous.com/media/apk_images/tmphKmwA2 ,\n             tags : [],\n             md5 :  795ec6217530a3531c66f3bb99d40802 ,\n             sha1 :  9eca8b3a3c03542ef890b9074dc09430bf736068 ,\n             sha256 :  249c7fe2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487 ,\n             app :  \u79c1\u5bc6\u5feb\u64ad ,\n             package_name :  afhl.ktld.uysg.ptey ,\n             company :  qmnu ,\n             displayed_version :  7.8.0 ,\n             size : 2337458,\n             stored : true,\n             analyzed : true,\n             trusted : false,\n             detected : false,\n             corrupted : false,\n             repo :  \n        },\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/apks/#python-examples", 
            "text": "A basic APK list request.  import requests\nr = requests.get(url= https://api.koodous.com/apks )\nr.json()\n# { next : https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D ,  previous : null,  results : [...  An APK search request  import requests\nparams = {'search':'Whatsapp'}\nr = requests.get(url= https://api.koodous.com/apks , params=params)\nr.json()\n# { next : https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D ,  previous : null,  results : [...  An APK detail  import requests\nsha256 =  cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544 \nr = requests.get(url= https://api.koodous.com/apks/%s  % sha256)\nr.json()\n#{ created_on :1429629827, rating :0, image : https://cdn1.koodous.com/apk_images/2015/4/21/tmpYDOLaE , tags :[], md5 : 8fee025ee05aa599a29ef6563b24d027 ...", 
            "title": "Python examples"
        }, 
        {
            "location": "/rest-api/apk-download/", 
            "text": "APK Download\n\n\nMethod to get a download url of an especific sample.\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks/:sha256/download\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/download\n\n\nExample result\n\n\n{\n    \ndownload_url\n: \nhttps://lmcn2.koodous.com/download/JDSS8lPNBQCed8qOy6gu0ECtSYDJwqmRr8B+lDie0vTPiJZz2IViaj3xiSAsWHh3eJKsc2LkdL0ZLhEyk9P3LJbusF+OxchdicKKyxvCpPyIM2Km7yIou7P7QOCkGajS\n\n}\n\n\n\n\nNote:\n The download url expires after 15 minutes.\n\n\nExample in python\n\n\nimport requests\nimport urllib\n\nsha256 = \n2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\n\n\nurl_koodous = \nhttps://api.koodous.com/apks/%s/download\n % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'})\n\nif r.status_code is 200:\n    testfile = urllib.URLopener()\n    testfile.retrieve(r.json().get('download_url'), ffile)\n\n\n\n\n\nCheck pykoodous.py, a python API manager script\n.", 
            "title": "APK Download"
        }, 
        {
            "location": "/rest-api/apk-download/#apk-download", 
            "text": "Method to get a download url of an especific sample.", 
            "title": "APK Download"
        }, 
        {
            "location": "/rest-api/apk-download/#resource-urls", 
            "text": "https://api.koodous.com/apks/:sha256/download", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apk-download/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apk-download/#example-request", 
            "text": "https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/download", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-download/#example-result", 
            "text": "{\n     download_url :  https://lmcn2.koodous.com/download/JDSS8lPNBQCed8qOy6gu0ECtSYDJwqmRr8B+lDie0vTPiJZz2IViaj3xiSAsWHh3eJKsc2LkdL0ZLhEyk9P3LJbusF+OxchdicKKyxvCpPyIM2Km7yIou7P7QOCkGajS \n}  Note:  The download url expires after 15 minutes.", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/apk-download/#example-in-python", 
            "text": "import requests\nimport urllib\n\nsha256 =  2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487 \n\nurl_koodous =  https://api.koodous.com/apks/%s/download  % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'})\n\nif r.status_code is 200:\n    testfile = urllib.URLopener()\n    testfile.retrieve(r.json().get('download_url'), ffile)  Check pykoodous.py, a python API manager script .", 
            "title": "Example in python"
        }, 
        {
            "location": "/rest-api/apk-upload/", 
            "text": "APK Upload\n\n\nMethod to get an upload url for an especific sample.\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks/:sha256/get_upload_url\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/get_upload_url\n\n\nExample result\n\n\n{\n    \nupload_url\n:\nhttps://lmcn2.koodous.com/upload/JDSS8lPNBQCed8qOy6gu0CmvsheZhYdQDM6UMPa3Oz7uJSbCRbdez0c9DKxoXUf7P0dobSZUiB2njx4f3xjX1Sq6pJM4Q0NwuokwL7glirbF3sSR8wG0BA0NmIP3+H8g\n\n}\n\n\n\n\nNote:\n The upload url expires after 15 minutes.\n\n\nExample in python\n\n\nimport requests\n\nsha256 = \n2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\n\nurl_koodous = \nhttps://api.koodous.com/apks/%s/get_upload_url\n % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'})\n\nrequests.post(url=r.json().get('upload_url'), files=files)", 
            "title": "APK Upload"
        }, 
        {
            "location": "/rest-api/apk-upload/#apk-upload", 
            "text": "Method to get an upload url for an especific sample.", 
            "title": "APK Upload"
        }, 
        {
            "location": "/rest-api/apk-upload/#resource-urls", 
            "text": "https://api.koodous.com/apks/:sha256/get_upload_url", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apk-upload/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apk-upload/#example-request", 
            "text": "https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/get_upload_url", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-upload/#example-result", 
            "text": "{\n     upload_url : https://lmcn2.koodous.com/upload/JDSS8lPNBQCed8qOy6gu0CmvsheZhYdQDM6UMPa3Oz7uJSbCRbdez0c9DKxoXUf7P0dobSZUiB2njx4f3xjX1Sq6pJM4Q0NwuokwL7glirbF3sSR8wG0BA0NmIP3+H8g \n}  Note:  The upload url expires after 15 minutes.", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/apk-upload/#example-in-python", 
            "text": "import requests\n\nsha256 =  2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487 \nurl_koodous =  https://api.koodous.com/apks/%s/get_upload_url  % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'})\n\nrequests.post(url=r.json().get('upload_url'), files=files)", 
            "title": "Example in python"
        }, 
        {
            "location": "/rest-api/apk-analysis/", 
            "text": "APK Analysis\n\n\nMethod to get an apk's analysis report.\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks/:sha256/analysis\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analysis\n\n\nExample in python\n\n\nimport requests\nimport urllib\n\nsha256 = \n2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\n\n\nurl_koodous = \nhttps://api.koodous.com/apks/%s/analysis\n % sha256\nr = requests.get(url=url_koodous)\nr.json()\n\n\n\n\nCheck pykoodous.py, a python API manager script\n.\n\n\nAnalysis request\n\n\nIf you want to request an APK analysis you need an \nAPI token\n.\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analyze\n\n\nExample in python\n\n\nimport requests\nimport urllib\n\nsha256 = \n2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\n\n\nurl_koodous = \nhttps://api.koodous.com/apks/%s/analyze\n % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token %s' % \nYOURTOKENHERE\n})\nr.json()", 
            "title": "APK Analysis"
        }, 
        {
            "location": "/rest-api/apk-analysis/#apk-analysis", 
            "text": "Method to get an apk's analysis report.", 
            "title": "APK Analysis"
        }, 
        {
            "location": "/rest-api/apk-analysis/#resource-urls", 
            "text": "https://api.koodous.com/apks/:sha256/analysis", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apk-analysis/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apk-analysis/#example-request", 
            "text": "https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analysis", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-analysis/#example-in-python", 
            "text": "import requests\nimport urllib\n\nsha256 =  2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487 \n\nurl_koodous =  https://api.koodous.com/apks/%s/analysis  % sha256\nr = requests.get(url=url_koodous)\nr.json()  Check pykoodous.py, a python API manager script .", 
            "title": "Example in python"
        }, 
        {
            "location": "/rest-api/apk-analysis/#analysis-request", 
            "text": "If you want to request an APK analysis you need an  API token .", 
            "title": "Analysis request"
        }, 
        {
            "location": "/rest-api/apk-analysis/#example-request_1", 
            "text": "https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analyze", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-analysis/#example-in-python_1", 
            "text": "import requests\nimport urllib\n\nsha256 =  2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487 \n\nurl_koodous =  https://api.koodous.com/apks/%s/analyze  % sha256\nr = requests.get(url=url_koodous, headers={'Authorization': 'Token %s' %  YOURTOKENHERE })\nr.json()", 
            "title": "Example in python"
        }, 
        {
            "location": "/feed/apks/", 
            "text": "APKs feed\n\n\nThis is a private method If you want to use it contact us at \ninfo@koodous.com\n\n\nIf you want to download all apks from our repository as soon we add them you can use this method.\n\n\nYou can either get a latest 5 or 60 minutes zip file with a list or url of samples. With an argument you can select the range you prefer.\n\n\nExample simple request\n\n\nhttps://api.koodous.com/feed/apks(?package=)\n\n\nThe request redirects you to the latest .zip\n\n\nCurl basic example\n\n\nA basic APK list request.\n\n\ncurl -g -O -J -L -H \nAuthorization: Token YOURTOKEN\n https://api.koodous.com/feed/apks\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 14283  100 14283    0     0   7251      0  0:00:01  0:00:01 --:--:--  108k\n# curl: Saved to filename 'apk_20160613T1040.zip'\n\n\n\n\nCurl example with params\n\n\nYou can download a specific package using \n?package\n param:\n\n\nThe package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0).\n\n\nThe availability of each package is a week right after its creation.\n\n\ncurl -g -O -J -L -H \nAuthorization: Token YOURTOKEN\n https://api.koodous.com/feed/apks?package=20160610T1025\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 27305  100 27305    0     0  13071      0  0:00:02  0:00:02 --:--:-- 66924\n# curl: Saved to filename 'apk_20160610T1025.zip'\n\n\n\n\nPython Script\n\n\nYou can use our feed.py script. Check it out \nhere\n\n\nThe usage is simple: modify the script and replace \nTOKEN = \"\"\n with your api token and then:\n\n\npython feed.py --apks 5\n# Downloaded file apks/apk_20160613T1055.zip with samples download link\n# Waiting for the next package\n# Waiting 5 minutes\n\npython feed.py --apks 60\n# Downloaded file apks/apk_20160613T1055.zip with samples download link\n# Waiting for the next package\n# Waiting 60 minutes", 
            "title": "APKs feed"
        }, 
        {
            "location": "/feed/apks/#apks-feed", 
            "text": "This is a private method If you want to use it contact us at  info@koodous.com  If you want to download all apks from our repository as soon we add them you can use this method.  You can either get a latest 5 or 60 minutes zip file with a list or url of samples. With an argument you can select the range you prefer.", 
            "title": "APKs feed"
        }, 
        {
            "location": "/feed/apks/#example-simple-request", 
            "text": "https://api.koodous.com/feed/apks(?package=)  The request redirects you to the latest .zip", 
            "title": "Example simple request"
        }, 
        {
            "location": "/feed/apks/#curl-basic-example", 
            "text": "A basic APK list request.  curl -g -O -J -L -H  Authorization: Token YOURTOKEN  https://api.koodous.com/feed/apks\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 14283  100 14283    0     0   7251      0  0:00:01  0:00:01 --:--:--  108k\n# curl: Saved to filename 'apk_20160613T1040.zip'", 
            "title": "Curl basic example"
        }, 
        {
            "location": "/feed/apks/#curl-example-with-params", 
            "text": "You can download a specific package using  ?package  param:  The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0).  The availability of each package is a week right after its creation.  curl -g -O -J -L -H  Authorization: Token YOURTOKEN  https://api.koodous.com/feed/apks?package=20160610T1025\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 27305  100 27305    0     0  13071      0  0:00:02  0:00:02 --:--:-- 66924\n# curl: Saved to filename 'apk_20160610T1025.zip'", 
            "title": "Curl example with params"
        }, 
        {
            "location": "/feed/apks/#python-script", 
            "text": "You can use our feed.py script. Check it out  here  The usage is simple: modify the script and replace  TOKEN = \"\"  with your api token and then:  python feed.py --apks 5\n# Downloaded file apks/apk_20160613T1055.zip with samples download link\n# Waiting for the next package\n# Waiting 5 minutes\n\npython feed.py --apks 60\n# Downloaded file apks/apk_20160613T1055.zip with samples download link\n# Waiting for the next package\n# Waiting 60 minutes", 
            "title": "Python Script"
        }, 
        {
            "location": "/feed/analyses/", 
            "text": "Analyses feed\n\n\nThis is a private method If you want to use it contact us at \ninfo@koodous.com\n\n\nIf you want to download all apks analysis reports from our repository as soon we add them you can use this method.\n\n\nYou can either get a latest 5 or 60 minutes zip file full of json reports. With an argument you can select the range you prefer.\n\n\nExample simple request\n\n\nhttps://api.koodous.com/feed/analyses(?package=)\n\n\nThe request redirects you to the latest .zip\n\n\nCurl basic example\n\n\nA basic analysis feed request.\n\n\ncurl -g -O -J -L -H \nAuthorization: Token YOURTOKEN\n https://api.koodous.com/feed/analyses\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 14283  100 14283    0     0   7251      0  0:00:01  0:00:01 --:--:--  108k\n# curl: Saved to filename 'apk_20160613T1040.zip'\n\n\n\n\nCurl example with params\n\n\nYou can download a specific package using \n?package\n param:\n\n\nThe package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0).\n\n\nThe availability of each package is a week right after its creation.\n\n\ncurl -g -O -J -L -H \nAuthorization: Token YOURTOKEN\n https://api.koodous.com/feed/analyses?package=20160610T1025\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 27305  100 27305    0     0  13071      0  0:00:02  0:00:02 --:--:-- 66924\n# curl: Saved to filename 'analysis_20160610T1025.zip'\n\n\n\n\nPython Script\n\n\nYou can use our feed.py script. Check it out \nhere\n\n\nThe usage is simple: modify the script and replace \nTOKEN = \"\"\n with your api token and then:\n\n\npython feed.py --analysis 5\n# Downloaded analysis in analysis/analysis_20160613T1055.zip\n# Waiting for the next package\n# Waiting 5 minutes\n\npython feed.py --analysis 60\n# Downloaded analysis in analysis/analysis_20160613T1055.zip\n# Waiting for the next package\n# Waiting 60 minutes", 
            "title": "Analyses feed"
        }, 
        {
            "location": "/feed/analyses/#analyses-feed", 
            "text": "This is a private method If you want to use it contact us at  info@koodous.com  If you want to download all apks analysis reports from our repository as soon we add them you can use this method.  You can either get a latest 5 or 60 minutes zip file full of json reports. With an argument you can select the range you prefer.", 
            "title": "Analyses feed"
        }, 
        {
            "location": "/feed/analyses/#example-simple-request", 
            "text": "https://api.koodous.com/feed/analyses(?package=)  The request redirects you to the latest .zip", 
            "title": "Example simple request"
        }, 
        {
            "location": "/feed/analyses/#curl-basic-example", 
            "text": "A basic analysis feed request.  curl -g -O -J -L -H  Authorization: Token YOURTOKEN  https://api.koodous.com/feed/analyses\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 14283  100 14283    0     0   7251      0  0:00:01  0:00:01 --:--:--  108k\n# curl: Saved to filename 'apk_20160613T1040.zip'", 
            "title": "Curl basic example"
        }, 
        {
            "location": "/feed/analyses/#curl-example-with-params", 
            "text": "You can download a specific package using  ?package  param:  The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0).  The availability of each package is a week right after its creation.  curl -g -O -J -L -H  Authorization: Token YOURTOKEN  https://api.koodous.com/feed/analyses?package=20160610T1025\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n#   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n# 100 27305  100 27305    0     0  13071      0  0:00:02  0:00:02 --:--:-- 66924\n# curl: Saved to filename 'analysis_20160610T1025.zip'", 
            "title": "Curl example with params"
        }, 
        {
            "location": "/feed/analyses/#python-script", 
            "text": "You can use our feed.py script. Check it out  here  The usage is simple: modify the script and replace  TOKEN = \"\"  with your api token and then:  python feed.py --analysis 5\n# Downloaded analysis in analysis/analysis_20160613T1055.zip\n# Waiting for the next package\n# Waiting 5 minutes\n\npython feed.py --analysis 60\n# Downloaded analysis in analysis/analysis_20160613T1055.zip\n# Waiting for the next package\n# Waiting 60 minutes", 
            "title": "Python Script"
        }, 
        {
            "location": "/rest-api/apk-comments/", 
            "text": "APKs comments\n\n\nMethod to list apk comments with pagination\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks/:sha256/comments\n\n\n\n\nObject details\n\n\n\n\nid\n \nComment ID\n\n\nauthor\n \nAnalyst object (\nanalysts\n)\n\n\napk\n \nAPK sha256 hash\n\n\ncreated_on\n \nThe date when comment was created on koodous\n\n\nmodified_on\n \nThe date when comment was modified\n\n\ntext\n \nThe comment's content\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n60\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n?cursor\n \nSpecify cursor of current results\n\n\n?page_size\n \nA value of users votes\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments\n\n\nExample result\n\n\n{\n    \nnext\n: \nhttps://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nid\n: 114,\n            \nauthor\n: {\n                \nusername\n: \nuser1\n,\n                \nfirst_name\n: \nRobert\n,\n                \nlast_name\n: \nSmith\n,\n                \ndate_joined\n: 1414423670,\n                \nlast_login\n: 1429694015,\n                \ntotal_public_rulesets\n: 1,\n                \ntotal_followers\n: 3,\n                \ntotal_following\n: 6,\n                \ntotal_comments\n: 27,\n                \navatar_url\n: \n/media/avatars/116585.jpg\n,\n                \noccupation\n: \nMalware analyst\n,\n                \nbio\n: \nMalware analyst\n,\n                \ntwitter_user\n: \n,\n                \ncan_invite\n: true\n            },\n            \napk\n: \ncc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\n,\n            \ncreated_on\n: 1429698724,\n            \nmodified_on\n: 1429698724,\n            \ntext\n: \ntest\n\n        }\n    ]\n}\n\n\n\n\nComment creation\n\n\nComment creation can be done with the next request:\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/comments\nRequest Method: POST\nStatus Code: 201 CREATED\n\n\n\n\nPayload should looks like following:\n\n\n{\ntext\n: \ntest2\n}\n\n\n\n\nComment deletion\n\n\nA comment can be delete if the authenticated user is the owner. The request should looks like following:\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/comments/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "APK Comments"
        }, 
        {
            "location": "/rest-api/apk-comments/#apks-comments", 
            "text": "Method to list apk comments with pagination", 
            "title": "APKs comments"
        }, 
        {
            "location": "/rest-api/apk-comments/#resource-urls", 
            "text": "https://api.koodous.com/apks/:sha256/comments", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apk-comments/#object-details", 
            "text": "id   Comment ID  author   Analyst object ( analysts )  apk   APK sha256 hash  created_on   The date when comment was created on koodous  modified_on   The date when comment was modified  text   The comment's content", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/apk-comments/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  60", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/apk-comments/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )  ?cursor   Specify cursor of current results  ?page_size   A value of users votes   Examples:   https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments  https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apk-comments/#example-request", 
            "text": "https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-comments/#example-result", 
            "text": "{\n     next :  https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D ,\n     previous : null,\n     results : [\n        {\n             id : 114,\n             author : {\n                 username :  user1 ,\n                 first_name :  Robert ,\n                 last_name :  Smith ,\n                 date_joined : 1414423670,\n                 last_login : 1429694015,\n                 total_public_rulesets : 1,\n                 total_followers : 3,\n                 total_following : 6,\n                 total_comments : 27,\n                 avatar_url :  /media/avatars/116585.jpg ,\n                 occupation :  Malware analyst ,\n                 bio :  Malware analyst ,\n                 twitter_user :  ,\n                 can_invite : true\n            },\n             apk :  cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544 ,\n             created_on : 1429698724,\n             modified_on : 1429698724,\n             text :  test \n        }\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/apk-comments/#comment-creation", 
            "text": "Comment creation can be done with the next request:  Remote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/comments\nRequest Method: POST\nStatus Code: 201 CREATED  Payload should looks like following:  { text :  test2 }", 
            "title": "Comment creation"
        }, 
        {
            "location": "/rest-api/apk-comments/#comment-deletion", 
            "text": "A comment can be delete if the authenticated user is the owner. The request should looks like following:  Remote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/comments/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "Comment deletion"
        }, 
        {
            "location": "/rest-api/apk-votes/", 
            "text": "APK Votes\n\n\nMethod to vote an APK sample\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/apks/:sha256/votes\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n60\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n\n\nExample request\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/votes\nRequest Method: POST\nStatus Code: 201 CREATED\n\n\n\n\nPayload options\n\n\n{kind: \npositive\n}\n\n\n\n\n{kind: \nnegative\n}", 
            "title": "APK Votes"
        }, 
        {
            "location": "/rest-api/apk-votes/#apk-votes", 
            "text": "Method to vote an APK sample", 
            "title": "APK Votes"
        }, 
        {
            "location": "/rest-api/apk-votes/#resource-urls", 
            "text": "https://api.koodous.com/apks/:sha256/votes", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/apk-votes/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  60", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/apk-votes/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/apk-votes/#example-request", 
            "text": "Remote Address: koodous.com\nRequest URL: https://api.koodous.com/apks/:sha256/votes\nRequest Method: POST\nStatus Code: 201 CREATED", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/apk-votes/#payload-options", 
            "text": "{kind:  positive }  {kind:  negative }", 
            "title": "Payload options"
        }, 
        {
            "location": "/rest-api/analysts/", 
            "text": "Analysts\n\n\nMethod to list koodous's analysts\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/analysts\n\n\nhttps://api.koodous.com/analysts/:username\n\n\n\n\nObject details\n\n\n\n\nusername\n \nAnalyst's Username\n\n\nfirst_name\n \nAnalyst's first name\n\n\nlast_name\n \nAnalyst's last name\n\n\ndate_joined\n \nAccount creation date\n\n\nlast_login\n \nLast login date\n\n\ntotal_public_rulesets\n \nNumber of public analyst's rulesets\n\n\ntotal_followers\n \nNumber of followers\n\n\ntotal_following\n \nTotal of analyst that the user is following\n\n\ntotal_comments\n \nTotal comments written by analyst\n\n\navatar_url\n Analyst image_\n\n\noccupation\n \nOccupation\n\n\nbio\n \nBio\n\n\ntwitter_user\n \nUsername in twitter\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n500\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:username\n \nUsername lookup (\nRequired for analyst detail request\n)\n\n\n?page\n \nSpecify page of current results\n\n\n?page_size\n \nA value of users votes\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/analysts?page=1\npage_size=5\n\n\nhttps://api.koodous.com/analysts/user1\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/apks/analysts\n\n\nExample result\n\n\n{\n    \ncount\n: 1,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nusername\n: \nuser1\n,\n            \nfirst_name\n: \nRobert\n,\n            \nlast_name\n: \nSmith\n,\n            \ndate_joined\n: 1414423670,\n            \nlast_login\n: 1429694015,\n            \ntotal_public_rulesets\n: 1,\n            \ntotal_followers\n: 3,\n            \ntotal_following\n: 6,\n            \ntotal_comments\n: 27,\n            \navatar_url\n: \n/media/avatars/116585.jpg\n,\n            \noccupation\n: \nMalware analyst\n,\n            \nbio\n: \nMalware analyst\n,\n            \ntwitter_user\n: \n,\n        },\n    ]\n}\n\n\n\n\nUpdate analyst info\n\n\nAn analyst can edit his profile information with the next example request:\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/analysts/user1\nRequest Method: PATCH\nStatus Code: 200 OK\n\n\n\n\nPayload and response should looks like following:\n\n\n{\n    \nfirst_name\n: \nAndrew\n,\n    \nlast_name\n: \nSmith2\n\n}x\n\n\n\n\nAnalyst extra methods\n\n\nAnalyst related info can be accesed from \n/analysts/:username\n.\n\n\n\n\nGET \n/analysts/:username/followers\n Analysts list following requested username\n\n\nGET \n/analysts/:username/following\n Analysts list followed by requested username\n\n\nGET \n/analysts/:username/comments\n Comments written by requested username\n\n\nGET \n/analysts/:username/activity\n Requested username activity\n\n\nGET \n/analysts/:username/rulesets\n Public rulesets of requested username\n\n\nGET \n/analysts/:username/follow\n Start following analyst\n\n\nGET \n/analysts/:username/unfollow\n Stop following analyst", 
            "title": "Analysts"
        }, 
        {
            "location": "/rest-api/analysts/#analysts", 
            "text": "Method to list koodous's analysts", 
            "title": "Analysts"
        }, 
        {
            "location": "/rest-api/analysts/#resource-urls", 
            "text": "https://api.koodous.com/analysts  https://api.koodous.com/analysts/:username", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/analysts/#object-details", 
            "text": "username   Analyst's Username  first_name   Analyst's first name  last_name   Analyst's last name  date_joined   Account creation date  last_login   Last login date  total_public_rulesets   Number of public analyst's rulesets  total_followers   Number of followers  total_following   Total of analyst that the user is following  total_comments   Total comments written by analyst  avatar_url  Analyst image_  occupation   Occupation  bio   Bio  twitter_user   Username in twitter", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/analysts/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  500", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/analysts/#parameters", 
            "text": ":username   Username lookup ( Required for analyst detail request )  ?page   Specify page of current results  ?page_size   A value of users votes   Examples:   https://api.koodous.com/analysts?page=1 page_size=5  https://api.koodous.com/analysts/user1", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/analysts/#example-request", 
            "text": "https://api.koodous.com/apks/analysts", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/analysts/#example-result", 
            "text": "{\n     count : 1,\n     next : null,\n     previous : null,\n     results : [\n        {\n             username :  user1 ,\n             first_name :  Robert ,\n             last_name :  Smith ,\n             date_joined : 1414423670,\n             last_login : 1429694015,\n             total_public_rulesets : 1,\n             total_followers : 3,\n             total_following : 6,\n             total_comments : 27,\n             avatar_url :  /media/avatars/116585.jpg ,\n             occupation :  Malware analyst ,\n             bio :  Malware analyst ,\n             twitter_user :  ,\n        },\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/analysts/#update-analyst-info", 
            "text": "An analyst can edit his profile information with the next example request:  Remote Address: koodous.com\nRequest URL: https://api.koodous.com/analysts/user1\nRequest Method: PATCH\nStatus Code: 200 OK  Payload and response should looks like following:  {\n     first_name :  Andrew ,\n     last_name :  Smith2 \n}x", 
            "title": "Update analyst info"
        }, 
        {
            "location": "/rest-api/analysts/#analyst-extra-methods", 
            "text": "Analyst related info can be accesed from  /analysts/:username .   GET  /analysts/:username/followers  Analysts list following requested username  GET  /analysts/:username/following  Analysts list followed by requested username  GET  /analysts/:username/comments  Comments written by requested username  GET  /analysts/:username/activity  Requested username activity  GET  /analysts/:username/rulesets  Public rulesets of requested username  GET  /analysts/:username/follow  Start following analyst  GET  /analysts/:username/unfollow  Stop following analyst", 
            "title": "Analyst extra methods"
        }, 
        {
            "location": "/rest-api/user_rulesets/", 
            "text": "Rulesets\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/user_rulesets\n\n\nhttps://api.koodous.com/user_rulesets/:id\n\n\n\n\nObject details\n\n\n\n\nid\n \nRuleset ID\n\n\nactive\n \nRuleset is active or not.\n\n\ncreated_on\n \nThe date when ruleset was created on koodous.\n\n\ndetections\n \nTotal APK detections for this ruleset.\n\n\nmodified_on\n \nThe date when comment was modified.\n\n\nname\n \nRuleset's name.\n\n\nprivacy\n \nRuleset's privacy (public or private).\n\n\nrules\n \nThe ruleset content.\n\n\nsend_notifications\n \nThe ruleset will notify detections or not.\n\n\nsocial\n \nThe ruleset is inside the Koodous detection system.\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n60\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n?page\n \nSpecify page of current results\n\n\n?page_size\n \nA value of users votes\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/user_rulesets\n\n\nhttps://api.koodous.com/user_rulesets?page=1\npage_size=10\nactive=True\nprivacy=public\nordering=-modified_on\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/user_rulesets?page=1\npage_size=10\nactive=True\nprivacy=public\nordering=-modified_on\n\n\nExample result\n\n\n{\n    \ncount\n: 1,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nid\n: 497,\n            \ncreated_on\n: 1431685981,\n            \nmodified_on\n: 1431685981,\n            \nname\n: \nNew Ruleset\n,\n            \nrules\n: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n,\n            \nactive\n: false,\n            \nprivacy\n: \npublic\n,\n            \nsocial\n: false,\n            \ndeleted\n: false,\n            \nsend_notifications\n: true,\n            \ndetections\n: 0,\n            \nparent\n: null\n        }\n    ]\n}\n\n\n\n\nRuleset creation\n\n\nRemote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets\nRequest Method:POST\nStatus Code:201 CREATED\n\n\n\n\nPayload example:\n\n\n{\nactive\n:true, name: \nNew Ruleset\n, rules: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n}\n\n\n\n\nRuleset Update\n\n\nRemote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets/:id\nRequest Method:PATCH\nStatus Code:200 OK\n\n\n\n\nPayload example:\n\n\n{\nactive\n:true, name: \nNew Ruleset\n, rules: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n}\n\n\n\n\nRuleset deletion\n\n\nRemote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets/:id\nRequest Method:DELETE\nStatus Code:204 NO CONTENT", 
            "title": "Your Rulesets"
        }, 
        {
            "location": "/rest-api/user_rulesets/#rulesets", 
            "text": "", 
            "title": "Rulesets"
        }, 
        {
            "location": "/rest-api/user_rulesets/#resource-urls", 
            "text": "https://api.koodous.com/user_rulesets  https://api.koodous.com/user_rulesets/:id", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/user_rulesets/#object-details", 
            "text": "id   Ruleset ID  active   Ruleset is active or not.  created_on   The date when ruleset was created on koodous.  detections   Total APK detections for this ruleset.  modified_on   The date when comment was modified.  name   Ruleset's name.  privacy   Ruleset's privacy (public or private).  rules   The ruleset content.  send_notifications   The ruleset will notify detections or not.  social   The ruleset is inside the Koodous detection system.", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/user_rulesets/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  60", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/user_rulesets/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )  ?page   Specify page of current results  ?page_size   A value of users votes   Examples:   https://api.koodous.com/user_rulesets  https://api.koodous.com/user_rulesets?page=1 page_size=10 active=True privacy=public ordering=-modified_on", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/user_rulesets/#example-request", 
            "text": "https://api.koodous.com/user_rulesets?page=1 page_size=10 active=True privacy=public ordering=-modified_on", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/user_rulesets/#example-result", 
            "text": "{\n     count : 1,\n     next : null,\n     previous : null,\n     results : [\n        {\n             id : 497,\n             created_on : 1431685981,\n             modified_on : 1431685981,\n             name :  New Ruleset ,\n             rules :  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} ,\n             active : false,\n             privacy :  public ,\n             social : false,\n             deleted : false,\n             send_notifications : true,\n             detections : 0,\n             parent : null\n        }\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/user_rulesets/#ruleset-creation", 
            "text": "Remote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets\nRequest Method:POST\nStatus Code:201 CREATED  Payload example:  { active :true, name:  New Ruleset , rules:  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} }", 
            "title": "Ruleset creation"
        }, 
        {
            "location": "/rest-api/user_rulesets/#ruleset-update", 
            "text": "Remote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets/:id\nRequest Method:PATCH\nStatus Code:200 OK  Payload example:  { active :true, name:  New Ruleset , rules:  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} }", 
            "title": "Ruleset Update"
        }, 
        {
            "location": "/rest-api/user_rulesets/#ruleset-deletion", 
            "text": "Remote Address:koodous.com\nRequest URL:https://api.koodous.com/user_rulesets/:id\nRequest Method:DELETE\nStatus Code:204 NO CONTENT", 
            "title": "Ruleset deletion"
        }, 
        {
            "location": "/rest-api/public_rulesets/", 
            "text": "Public Rulesets\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/public_rulesets\n\n\nhttps://api.koodous.com/public_rulesets/:id\n\n\n\n\nObject details\n\n\n\n\nid\n \nRuleset ID\n\n\nactive\n \nRuleset is active or not.\n\n\ncreated_on\n \nThe date when ruleset was created on koodous.\n\n\ndetections\n \nTotal APK detections for this ruleset.\n\n\nmodified_on\n \nThe date when comment was modified.\n\n\nname\n \nRuleset's name.\n\n\nprivacy\n \nRuleset's privacy (public or private).\n\n\nrules\n \nThe ruleset content.\n\n\nsend_notifications\n \nThe ruleset will notify detections or not.\n\n\nsocial\n \nThe ruleset is inside the Koodous detection system.\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n60\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:sha256\n \nsha256 lookup (\nRequired\n)\n\n\n?page\n \nSpecify page of current results\n\n\n?page_size\n \nA value of users votes\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/public_rulesets\n\n\nhttps://api.koodous.com/public_rulesets?page=1\npage_size=10\nactive=True\nprivacy=public\nordering=-modified_on\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/public_rulesets?page=1\npage_size=10\nactive=True\nprivacy=public\nordering=-modified_on\n\n\nExample result\n\n\n{\n    \ncount\n: 1,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nid\n: 497,\n            \ncreated_on\n: 1431685981,\n            \nmodified_on\n: 1431685981,\n            \nname\n: \nNew Ruleset\n,\n            \nrules\n: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n,\n            \nactive\n: false,\n            \nprivacy\n: \npublic\n,\n            \nsocial\n: false,\n            \ndeleted\n: false,\n            \nsend_notifications\n: true,\n            \ndetections\n: 0,\n            \nrating\n: 0,\n        }\n    ]\n}\n\n\n\n\nRuleset creation\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets\nRequest Method: POST\nStatus Code: 201 CREATED\n\n\n\n\nPayload example:\n\n\n{\nactive\n:true, name: \nNew Ruleset\n, rules: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n}\n\n\n\n\nRuleset Update\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id\nRequest Method: PATCH\nStatus Code: 200 OK\n\n\n\n\nPayload example:\n\n\n{\nactive\n:true, name: \nNew Ruleset\n, rules: \nrule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\nThis is just an example\\\n\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\nUVODFRYSIHLNWPEJXQZAKCBGMT\\\n\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\n}\n\n\n\n\nRuleset deletion\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "Public Rulesets"
        }, 
        {
            "location": "/rest-api/public_rulesets/#public-rulesets", 
            "text": "", 
            "title": "Public Rulesets"
        }, 
        {
            "location": "/rest-api/public_rulesets/#resource-urls", 
            "text": "https://api.koodous.com/public_rulesets  https://api.koodous.com/public_rulesets/:id", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/public_rulesets/#object-details", 
            "text": "id   Ruleset ID  active   Ruleset is active or not.  created_on   The date when ruleset was created on koodous.  detections   Total APK detections for this ruleset.  modified_on   The date when comment was modified.  name   Ruleset's name.  privacy   Ruleset's privacy (public or private).  rules   The ruleset content.  send_notifications   The ruleset will notify detections or not.  social   The ruleset is inside the Koodous detection system.", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/public_rulesets/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  60", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/public_rulesets/#parameters", 
            "text": ":sha256   sha256 lookup ( Required )  ?page   Specify page of current results  ?page_size   A value of users votes   Examples:   https://api.koodous.com/public_rulesets  https://api.koodous.com/public_rulesets?page=1 page_size=10 active=True privacy=public ordering=-modified_on", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/public_rulesets/#example-request", 
            "text": "https://api.koodous.com/public_rulesets?page=1 page_size=10 active=True privacy=public ordering=-modified_on", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/public_rulesets/#example-result", 
            "text": "{\n     count : 1,\n     next : null,\n     previous : null,\n     results : [\n        {\n             id : 497,\n             created_on : 1431685981,\n             modified_on : 1431685981,\n             name :  New Ruleset ,\n             rules :  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} ,\n             active : false,\n             privacy :  public ,\n             social : false,\n             deleted : false,\n             send_notifications : true,\n             detections : 0,\n             rating : 0,\n        }\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/public_rulesets/#ruleset-creation", 
            "text": "Remote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets\nRequest Method: POST\nStatus Code: 201 CREATED  Payload example:  { active :true, name:  New Ruleset , rules:  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} }", 
            "title": "Ruleset creation"
        }, 
        {
            "location": "/rest-api/public_rulesets/#ruleset-update", 
            "text": "Remote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id\nRequest Method: PATCH\nStatus Code: 200 OK  Payload example:  { active :true, name:  New Ruleset , rules:  rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\ This is just an example\\ \\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\ UVODFRYSIHLNWPEJXQZAKCBGMT\\ \\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n} }", 
            "title": "Ruleset Update"
        }, 
        {
            "location": "/rest-api/public_rulesets/#ruleset-deletion", 
            "text": "Remote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "Ruleset deletion"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/", 
            "text": "Public Rulesets Votes\n\n\nMethod to list votes or vote a ruleset.\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/public_rulesets/:id/votes\n\n\n\n\nObject details\n\n\n\n\nkind\n \nPositive or negative\n\n\nanalyst\n \nVote's username\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n100\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:id\n \nid lookup (\nRequired\n)\n\n\n\n\n{\n  \ncount\n: 6,\n  \nnext\n: null,\n  \nprevious\n: null,\n  \nresults\n: [\n    {\n      \nkind\n: \npositive\n,\n      \nanalyst\n: \nuser1\n\n    },\n    {\n      \nkind\n: \npositive\n,\n      \nanalyst\n: \nuser2\n\n    },\n    {\n      \nkind\n: \npositive\n,\n      \nanalyst\n: \nuser3\n\n    },\n    {\n      \nkind\n: \npositive\n,\n      \nanalyst\n: \nuser4\n\n    },\n    {\n      \nkind\n: \npositive\n,\n      \nanalyst\n: \nuser5\n\n    },\n    {\n      \nkind\n: \nnegative\n,\n      \nanalyst\n: \nuser6\n\n    }\n  ]\n}\n\n\n\n\nCreation Example request\n\n\nRemote Address:koodous.com\nRequest URL:https://api.koodous.com/public_rulesets/:id/votes\nRequest Method:POST\nStatus Code:201 CREATED\n\n\n\n\nPayload options\n\n\n{kind: \npositive\n}\n\n\n\n\n{kind: \nnegative\n}", 
            "title": "Public Rulesets Votes"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#public-rulesets-votes", 
            "text": "Method to list votes or vote a ruleset.", 
            "title": "Public Rulesets Votes"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#resource-urls", 
            "text": "https://api.koodous.com/public_rulesets/:id/votes", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#object-details", 
            "text": "kind   Positive or negative  analyst   Vote's username", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  100", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#parameters", 
            "text": ":id   id lookup ( Required )   {\n   count : 6,\n   next : null,\n   previous : null,\n   results : [\n    {\n       kind :  positive ,\n       analyst :  user1 \n    },\n    {\n       kind :  positive ,\n       analyst :  user2 \n    },\n    {\n       kind :  positive ,\n       analyst :  user3 \n    },\n    {\n       kind :  positive ,\n       analyst :  user4 \n    },\n    {\n       kind :  positive ,\n       analyst :  user5 \n    },\n    {\n       kind :  negative ,\n       analyst :  user6 \n    }\n  ]\n}", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#creation-example-request", 
            "text": "Remote Address:koodous.com\nRequest URL:https://api.koodous.com/public_rulesets/:id/votes\nRequest Method:POST\nStatus Code:201 CREATED", 
            "title": "Creation Example request"
        }, 
        {
            "location": "/rest-api/public_rulesets_votes/#payload-options", 
            "text": "{kind:  positive }  {kind:  negative }", 
            "title": "Payload options"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/", 
            "text": "Public Rulesets Comments\n\n\nMethod to list rulesets comments with pagination\n\n\nResource url/s\n\n\n\n\nhttps://api.koodous.com/public_rulesets/:id/comments\n\n\n\n\nObject details\n\n\n\n\nid\n \nComment ID\n\n\nauthor\n \nAnalyst object (\nanalysts\n)\n\n\napk\n \nAPK sha256 hash\n\n\ncreated_on\n \nThe date when comment was created on koodous\n\n\nmodified_on\n \nThe date when comment was modified\n\n\ntext\n \nThe comment's content\n\n\n\n\nResource information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse formats\n\n\nJSON\n\n\n\n\n\n\nRequires authentication\n\n\nYes\n\n\n\n\n\n\nRequests per minute\n\n\n100\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n:id\n \nId lookup (\nRequired\n)\n\n\n?page\n \nSpecify page of current results\n\n\n?page_size\n \nA value of users votes\n\n\n\n\nExamples:\n\n\n\n\nhttps://api.koodous.com/public_rulesets/123/comments\n\n\nhttps://api.koodous.com/public_rulesets/123/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\n\n\n\n\nExample request\n\n\nhttps://api.koodous.com/public_rulesets/123/comments\n\n\nExample result\n\n\n{\n    \ncount\n: 1,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nid\n: 114,\n            \nauthor\n: {\n                \nusername\n: \nuser1\n,\n                \nfirst_name\n: \nRobert\n,\n                \nlast_name\n: \nSmith\n,\n                \ndate_joined\n: 1414423670,\n                \nlast_login\n: 1429694015,\n                \ntotal_public_rulesets\n: 1,\n                \ntotal_followers\n: 3,\n                \ntotal_following\n: 6,\n                \ntotal_comments\n: 27,\n                \navatar_url\n: \n/media/avatars/116585.jpg\n,\n                \noccupation\n: \nMalware analyst\n,\n                \nbio\n: \nMalware analyst\n,\n                \ntwitter_user\n: \n,\n                \ncan_invite\n: true\n            },\n            \nruleset\n: 123,\n            \ncreated_on\n: 1429698724,\n            \nmodified_on\n: 1429698724,\n            \ntext\n: \ntest\n\n        }\n    ]\n}\n\n\n\n\nComment creation\n\n\nComment creation can be done with the next request:\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id/comments\nRequest Method: POST\nStatus Code: 201 CREATED\n\n\n\n\nPayload should looks like following:\n\n\n{\ntext\n: \ntest2\n}\n\n\n\n\nComment deletion\n\n\nA comment can be delete if the authenticated user is the owner. The request should looks like following:\n\n\nRemote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id/comments/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "Public Rulesets Comments"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#public-rulesets-comments", 
            "text": "Method to list rulesets comments with pagination", 
            "title": "Public Rulesets Comments"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#resource-urls", 
            "text": "https://api.koodous.com/public_rulesets/:id/comments", 
            "title": "Resource url/s"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#object-details", 
            "text": "id   Comment ID  author   Analyst object ( analysts )  apk   APK sha256 hash  created_on   The date when comment was created on koodous  modified_on   The date when comment was modified  text   The comment's content", 
            "title": "Object details"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#resource-information", 
            "text": "Response formats  JSON    Requires authentication  Yes    Requests per minute  100", 
            "title": "Resource information"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#parameters", 
            "text": ":id   Id lookup ( Required )  ?page   Specify page of current results  ?page_size   A value of users votes   Examples:   https://api.koodous.com/public_rulesets/123/comments  https://api.koodous.com/public_rulesets/123/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D", 
            "title": "Parameters"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#example-request", 
            "text": "https://api.koodous.com/public_rulesets/123/comments", 
            "title": "Example request"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#example-result", 
            "text": "{\n     count : 1,\n     next : null,\n     previous : null,\n     results : [\n        {\n             id : 114,\n             author : {\n                 username :  user1 ,\n                 first_name :  Robert ,\n                 last_name :  Smith ,\n                 date_joined : 1414423670,\n                 last_login : 1429694015,\n                 total_public_rulesets : 1,\n                 total_followers : 3,\n                 total_following : 6,\n                 total_comments : 27,\n                 avatar_url :  /media/avatars/116585.jpg ,\n                 occupation :  Malware analyst ,\n                 bio :  Malware analyst ,\n                 twitter_user :  ,\n                 can_invite : true\n            },\n             ruleset : 123,\n             created_on : 1429698724,\n             modified_on : 1429698724,\n             text :  test \n        }\n    ]\n}", 
            "title": "Example result"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#comment-creation", 
            "text": "Comment creation can be done with the next request:  Remote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id/comments\nRequest Method: POST\nStatus Code: 201 CREATED  Payload should looks like following:  { text :  test2 }", 
            "title": "Comment creation"
        }, 
        {
            "location": "/rest-api/public_rulesets_comments/#comment-deletion", 
            "text": "A comment can be delete if the authenticated user is the owner. The request should looks like following:  Remote Address: koodous.com\nRequest URL: https://api.koodous.com/public_rulesets/:id/comments/:id\nRequest Method: DELETE\nStatus Code: 204 NO CONTENT", 
            "title": "Comment deletion"
        }, 
        {
            "location": "/yara/getting-started/", 
            "text": "Getting started\n\n\nThe Yara tool aimed to help detection of any kind of malware, but in this case, Android Malware Applications. With Yara rules you can create a \"description\" of malware families to detect new samples.\n\n\nOur implementation of Yara is based in the original one, but with some extra modules in order to increase the usability of the ruleset with the knowledge extracted with the dynamic and the static analysis of each sample.\n\n\nBasic steps\n\n\nTo start to write Yara rules, you can use the official documentation \nhttp://yara.readthedocs.org/en/v3.3.0/\n where the author explains \nhow to write yara rules\n.\n\n\nYara works over...\n\n\nWe want to inform you how we are scanning the files with Yara in order to improve the detection of new malware samples.\n\n\nFirst, we extract the information about dynamic and static analysis and used them together with the APK file to try to match.\nThen, we decompress the APK and run Yara over these files. \n\n\nIf you have any suggestion about the analysis or the Yara scan, you can write us to \nanalysis@koodous.com", 
            "title": "Getting started"
        }, 
        {
            "location": "/yara/getting-started/#getting-started", 
            "text": "The Yara tool aimed to help detection of any kind of malware, but in this case, Android Malware Applications. With Yara rules you can create a \"description\" of malware families to detect new samples.  Our implementation of Yara is based in the original one, but with some extra modules in order to increase the usability of the ruleset with the knowledge extracted with the dynamic and the static analysis of each sample.", 
            "title": "Getting started"
        }, 
        {
            "location": "/yara/getting-started/#basic-steps", 
            "text": "To start to write Yara rules, you can use the official documentation  http://yara.readthedocs.org/en/v3.3.0/  where the author explains  how to write yara rules .", 
            "title": "Basic steps"
        }, 
        {
            "location": "/yara/getting-started/#yara-works-over", 
            "text": "We want to inform you how we are scanning the files with Yara in order to improve the detection of new malware samples.  First, we extract the information about dynamic and static analysis and used them together with the APK file to try to match.\nThen, we decompress the APK and run Yara over these files.   If you have any suggestion about the analysis or the Yara scan, you can write us to  analysis@koodous.com", 
            "title": "Yara works over..."
        }, 
        {
            "location": "/yara/androguard/", 
            "text": "Introduction\n\n\nAndroguard is a tool to make a static analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the static analysis.\n\n\nFirst of all, you need to import the module with the next directive at the header of the ruleset.\n\n\nimport \nandroguard\n\n\n\n\n\nPackage name\n\n\nEach Android application has a package name that need to be unique once the application is installed in the mobile phone, but in the wild, we found several applications with the same (or similar) package name. To find this kind of applications, we can use the next condition (we use a complete rule for explain the behaviour):\n\n\nandroguard.package_name(regex)\n\n\n\n\nAnd match with a string too...\n\n\nandroguard.package_name(string)\n\n\n\n\nrule videogames\n{\n    meta:\n        description = \nRule to catch APKs with package name match with videogame\n\n    condition:\n        androguard.package_name(/videogame/)\n}\n\n\n\n\nYou can add more restrictions to this rule, like strings, another functions of this module or conditions of another module.\n\n\nAPP name\n\n\nThe app name displayed when you install an application in a device could be an indicator of an \"anomaly\". For this reason, we have an condition to catch this applications. You can match with a regex or with a string.\n\n\nandroguard.app_name(regex)\n\n\n\n\nandroguard.app_name(string)\n\n\n\n\nrule videogames\n{\n    meta:\n        description = \nRule to catch APKs with app name match with cars\n\n    condition:\n        androguard.app_name(/cars/)\n}\n\n\n\n\nActivities\n\n\nThe activities is an esential part of the Android applications. They define the \"screens\" of an application and its logic, so, with the name of that, you can filter some applications. In the next example, we are going to filter applications which the name one of its activity is sms, with a point after and before of that word.\n\n\nIt accepts two formats, with string and with regular expression:\n\n\nandroguard.activity(string)\n\n\n\n\nandroguard.activity(regex)\n\n\n\n\nAnd you must use in the conditions section:\n\n\nrule sendSMS\n{\n    condition:\n        androguard.activity(/\\.sms\\./) or\n        androguard.activity(\ncom.package.name.sendSMS\n)\n}\n\n\n\n\nOf course, this filter does not indicate that the application send SMSs, but maybe receive or use an screen to send some type of SMS.\n\n\nReceivers\n\n\nTo find applications with certain receivers you could use this to match:\n\n\nandroguard.receiver(string)\n\n\n\n\nandroguard.receiver(regex)\n\n\n\n\nAnd in a rule, inside condition:\n\n\nrule sendSMS\n{\n    condition:\n        androguard.receiver(\ncom.airpush.android.DeliveryReceiver\n) or\n        androguard.receiver(/smsreceiver/i)\n}\n\n\n\n\nPermissions\n\n\nIn order to detect some applications that requires an special or desired permissions, you can use this condition. It find in all permissions of the application and if one of this match with the regular expression, it generates a notification.\n\n\nThe format is the next:\n\n\nandroguard.permission(regex)\n\n\n\n\nAnd you must use in the conditions section:\n\n\nrule videogames\n{\n    condition:\n        androguard.permission(/RESTART_PACKAGES/)\n}\n\n\n\n\nPermissions number\n\n\nSome applications with a huge number of permissions could be malware and this variable could help you to detect them.\n\n\nrule videogames\n{\n    condition:\n        androguard.permissions_number \n 5\n}\n\n\n\n\nServices\n\n\nThe service or services of an application are use to run tasks in background. Many times, the malware use this to downloads configuration files, to send stolen data or another thing, ever in background. In order to detect the applications that use an special or desired service name, you can use this condition. It find in all services of the application and if one of this match with the regular expression or an exact string and then generates a notification.\n\n\nandroguard.service(regex)\n\n\n\n\nandroguard.service(string)\n\n\n\n\nAnd you must use in the conditions section:\n\n\nrule videogames\n{\n    condition:\n        androguard.service(\ncom.example.SendData\n) or\n        androguard.service(/receivetoken/)\n}\n\n\n\n\nCertificate\n\n\nIn our website, one of the details of each APK is the \"Developer\". If you are a malware analyst, you must know that this field is not easy to know, so we use the APK' certificate to extract it. If you encounter a serie of APKs with the same Developer, you can create a Yara rule to know more of them.\n\n\nSHA1\n\n\nEach certificate has an SHA1 as a part of its signature, and you can match with it! Some malware developers use the same certificate for many samples, and with this condition you can detect them:\n\n\nandroguard.certificate.sha1(string)\n\n\n\n\nRemember\n that you need to match with the complete sha1, not with a part or regex of it.\n\n\nExample:\n\n\nrule videogames: adware\n{\n    condition:\n        androguard.certificate.sha1(\n5C88CB801C4FB3D609B57DCD7CAFC25B35E03AC2\n) or\n        androguard.certificate.sha1(\n9E:E0:B6:FD:D1:DC:0A:2B:0C:6B:22:EB:C9:38:4C:A0:DD:05:12:D5\n)\n        /* Note that accepts two syntax, with and without colons */\n}\n\n\n\n\nIssuer\n\n\nThe issuer of a certificate is the person (or entity) that generate the certificate. With the next condition you can match with it:\n\n\nandroguard.certificate.issuer(regex)\n\n\n\n\nSubject\n\n\nThe subject of a certificate is the owner of its. To match with this field, you can use:\n\n\nandroguard.certificate.subject(regex)\n\n\n\n\nNOTE: Normally, Issuer and Subject in an APK' certificates are the same, but this is not a norm.\n\n\nURL\n\n\nWe perform an static analysis over the APK extracting the \nhardcored URLs\n. You can do a rule to match with that (using a regex or a string).\n\n\nandroguard.url(regex)\n\n\n\n\nandroguard.url(string)\n\n\n\n\nrule videogames: adware\n{\n    condition:\n        androguard.url(/adurl\\.com/) or\n        androguard.url(\ngoogle.com\n)\n}\n\n\n\n\nNOTE\n: Remember that if you want to find a point (.) with a regex, you need to escape it with reverse slash. If you don't do that, it can match with any character.\n\n\nSDK versions\n\n\nThe AndroidManifest.xml file contains the versions minimum, maximum and target that the application requires, specified with the API number.\n\n\nThe API list is the next:\n\n\n\n\n\n\n\n\nCode name\n\n\nVersion\n\n\nAPI level\n\n\n\n\n\n\n\n\n\n\nLollipop\n\n\n5.0\n\n\nAPI level 21\n\n\n\n\n\n\nKitKat\n\n\n4.4 - 4.4.4\n\n\nAPI level 19\n\n\n\n\n\n\nJelly Bean\n\n\n4.3.x\n\n\nAPI level 18\n\n\n\n\n\n\nJelly Bean\n\n\n4.2.x\n\n\nAPI level 17\n\n\n\n\n\n\nJelly Bean\n\n\n4.1.x\n\n\nAPI level 16\n\n\n\n\n\n\nIce Cream Sandwich\n\n\n4.0.3 - 4.0.4\n\n\nAPI level 15\n\n\n\n\n\n\nIce Cream Sandwich\n\n\n4.0.1 - 4.0.2\n\n\nAPI level 14\n\n\n\n\n\n\nHoneycomb\n\n\n3.2.x\n\n\nAPI level 13\n\n\n\n\n\n\nHoneycomb\n\n\n3.1\n\n\nAPI level 12\n\n\n\n\n\n\nHoneycomb\n\n\n3.0\n\n\nAPI level 11\n\n\n\n\n\n\nGingerbread\n\n\n2.3.3 - 2.3.7\n\n\nAPI level 10\n\n\n\n\n\n\nGingerbread\n\n\n2.3 - 2.3.2\n\n\nAPI level 9\n\n\n\n\n\n\nFroyo\n\n\n2.2.x\n\n\nAPI level 8\n\n\n\n\n\n\nEclair\n\n\n2.1\n\n\nAPI level 7\n\n\n\n\n\n\nEclair\n\n\n2.0.1\n\n\nAPI level 6\n\n\n\n\n\n\nEclair\n\n\n2.0\n\n\nAPI level 5\n\n\n\n\n\n\nDonut\n\n\n1.6\n\n\nAPI level 4\n\n\n\n\n\n\nCupcake\n\n\n1.5\n\n\nAPI level 3\n\n\n\n\n\n\n(no code name)\n\n\n1.1\n\n\nAPI level 2\n\n\n\n\n\n\n(no code name)\n\n\n1.0\n\n\nAPI level 1\n\n\n\n\n\n\n\n\nYou can see an updated version of this table in its source: \nhttps://source.android.com/source/build-numbers.html\n\n\nMin SDK\n\n\nMinimum SDK version specifies that, the minimum version of Android require to execute the application. You can filter that using:\n\n\nrule videogames: adware\n{\n    condition:\n        androguard.min_sdk == 10 or\n        androguard.min_sdk \n 10 or\n        androguard.min_sdk \n= 20 \n        //It's only an example, don't bother!\n}\n\n\n\n\nMax SDK\n\n\nMaximum SDK specifies the higger version of Android that could run this application:\n\n\nrule videogames: adware\n{\n    condition:\n        androguard.max_sdk == 18 or\n        androguard.max_sdk \n 18 or\n        androguard.max_sdk \n= 19 \n}\n\n\n\n\nTarget SDK\n\n\nThe target version, theorically, specifies in which Android version the application was tested and worked fine.\n\n\nrule videogames: adware\n{\n    condition:\n        androguard.target_sdk == 14 or\n        androguard.target_sdk \n 14 or\n        androguard.target_sdk \n= 15 \n}", 
            "title": "Androguard"
        }, 
        {
            "location": "/yara/androguard/#introduction", 
            "text": "Androguard is a tool to make a static analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the static analysis.  First of all, you need to import the module with the next directive at the header of the ruleset.  import  androguard", 
            "title": "Introduction"
        }, 
        {
            "location": "/yara/androguard/#package-name", 
            "text": "Each Android application has a package name that need to be unique once the application is installed in the mobile phone, but in the wild, we found several applications with the same (or similar) package name. To find this kind of applications, we can use the next condition (we use a complete rule for explain the behaviour):  androguard.package_name(regex)  And match with a string too...  androguard.package_name(string)  rule videogames\n{\n    meta:\n        description =  Rule to catch APKs with package name match with videogame \n    condition:\n        androguard.package_name(/videogame/)\n}  You can add more restrictions to this rule, like strings, another functions of this module or conditions of another module.", 
            "title": "Package name"
        }, 
        {
            "location": "/yara/androguard/#app-name", 
            "text": "The app name displayed when you install an application in a device could be an indicator of an \"anomaly\". For this reason, we have an condition to catch this applications. You can match with a regex or with a string.  androguard.app_name(regex)  androguard.app_name(string)  rule videogames\n{\n    meta:\n        description =  Rule to catch APKs with app name match with cars \n    condition:\n        androguard.app_name(/cars/)\n}", 
            "title": "APP name"
        }, 
        {
            "location": "/yara/androguard/#activities", 
            "text": "The activities is an esential part of the Android applications. They define the \"screens\" of an application and its logic, so, with the name of that, you can filter some applications. In the next example, we are going to filter applications which the name one of its activity is sms, with a point after and before of that word.  It accepts two formats, with string and with regular expression:  androguard.activity(string)  androguard.activity(regex)  And you must use in the conditions section:  rule sendSMS\n{\n    condition:\n        androguard.activity(/\\.sms\\./) or\n        androguard.activity( com.package.name.sendSMS )\n}  Of course, this filter does not indicate that the application send SMSs, but maybe receive or use an screen to send some type of SMS.", 
            "title": "Activities"
        }, 
        {
            "location": "/yara/androguard/#receivers", 
            "text": "To find applications with certain receivers you could use this to match:  androguard.receiver(string)  androguard.receiver(regex)  And in a rule, inside condition:  rule sendSMS\n{\n    condition:\n        androguard.receiver( com.airpush.android.DeliveryReceiver ) or\n        androguard.receiver(/smsreceiver/i)\n}", 
            "title": "Receivers"
        }, 
        {
            "location": "/yara/androguard/#permissions", 
            "text": "In order to detect some applications that requires an special or desired permissions, you can use this condition. It find in all permissions of the application and if one of this match with the regular expression, it generates a notification.  The format is the next:  androguard.permission(regex)  And you must use in the conditions section:  rule videogames\n{\n    condition:\n        androguard.permission(/RESTART_PACKAGES/)\n}", 
            "title": "Permissions"
        }, 
        {
            "location": "/yara/androguard/#permissions-number", 
            "text": "Some applications with a huge number of permissions could be malware and this variable could help you to detect them.  rule videogames\n{\n    condition:\n        androguard.permissions_number   5\n}", 
            "title": "Permissions number"
        }, 
        {
            "location": "/yara/androguard/#services", 
            "text": "The service or services of an application are use to run tasks in background. Many times, the malware use this to downloads configuration files, to send stolen data or another thing, ever in background. In order to detect the applications that use an special or desired service name, you can use this condition. It find in all services of the application and if one of this match with the regular expression or an exact string and then generates a notification.  androguard.service(regex)  androguard.service(string)  And you must use in the conditions section:  rule videogames\n{\n    condition:\n        androguard.service( com.example.SendData ) or\n        androguard.service(/receivetoken/)\n}", 
            "title": "Services"
        }, 
        {
            "location": "/yara/androguard/#certificate", 
            "text": "In our website, one of the details of each APK is the \"Developer\". If you are a malware analyst, you must know that this field is not easy to know, so we use the APK' certificate to extract it. If you encounter a serie of APKs with the same Developer, you can create a Yara rule to know more of them.", 
            "title": "Certificate"
        }, 
        {
            "location": "/yara/androguard/#sha1", 
            "text": "Each certificate has an SHA1 as a part of its signature, and you can match with it! Some malware developers use the same certificate for many samples, and with this condition you can detect them:  androguard.certificate.sha1(string)  Remember  that you need to match with the complete sha1, not with a part or regex of it.  Example:  rule videogames: adware\n{\n    condition:\n        androguard.certificate.sha1( 5C88CB801C4FB3D609B57DCD7CAFC25B35E03AC2 ) or\n        androguard.certificate.sha1( 9E:E0:B6:FD:D1:DC:0A:2B:0C:6B:22:EB:C9:38:4C:A0:DD:05:12:D5 )\n        /* Note that accepts two syntax, with and without colons */\n}", 
            "title": "SHA1"
        }, 
        {
            "location": "/yara/androguard/#issuer", 
            "text": "The issuer of a certificate is the person (or entity) that generate the certificate. With the next condition you can match with it:  androguard.certificate.issuer(regex)", 
            "title": "Issuer"
        }, 
        {
            "location": "/yara/androguard/#subject", 
            "text": "The subject of a certificate is the owner of its. To match with this field, you can use:  androguard.certificate.subject(regex)  NOTE: Normally, Issuer and Subject in an APK' certificates are the same, but this is not a norm.", 
            "title": "Subject"
        }, 
        {
            "location": "/yara/androguard/#url", 
            "text": "We perform an static analysis over the APK extracting the  hardcored URLs . You can do a rule to match with that (using a regex or a string).  androguard.url(regex)  androguard.url(string)  rule videogames: adware\n{\n    condition:\n        androguard.url(/adurl\\.com/) or\n        androguard.url( google.com )\n}  NOTE : Remember that if you want to find a point (.) with a regex, you need to escape it with reverse slash. If you don't do that, it can match with any character.", 
            "title": "URL"
        }, 
        {
            "location": "/yara/androguard/#sdk-versions", 
            "text": "The AndroidManifest.xml file contains the versions minimum, maximum and target that the application requires, specified with the API number.  The API list is the next:     Code name  Version  API level      Lollipop  5.0  API level 21    KitKat  4.4 - 4.4.4  API level 19    Jelly Bean  4.3.x  API level 18    Jelly Bean  4.2.x  API level 17    Jelly Bean  4.1.x  API level 16    Ice Cream Sandwich  4.0.3 - 4.0.4  API level 15    Ice Cream Sandwich  4.0.1 - 4.0.2  API level 14    Honeycomb  3.2.x  API level 13    Honeycomb  3.1  API level 12    Honeycomb  3.0  API level 11    Gingerbread  2.3.3 - 2.3.7  API level 10    Gingerbread  2.3 - 2.3.2  API level 9    Froyo  2.2.x  API level 8    Eclair  2.1  API level 7    Eclair  2.0.1  API level 6    Eclair  2.0  API level 5    Donut  1.6  API level 4    Cupcake  1.5  API level 3    (no code name)  1.1  API level 2    (no code name)  1.0  API level 1     You can see an updated version of this table in its source:  https://source.android.com/source/build-numbers.html", 
            "title": "SDK versions"
        }, 
        {
            "location": "/yara/androguard/#min-sdk", 
            "text": "Minimum SDK version specifies that, the minimum version of Android require to execute the application. You can filter that using:  rule videogames: adware\n{\n    condition:\n        androguard.min_sdk == 10 or\n        androguard.min_sdk   10 or\n        androguard.min_sdk  = 20 \n        //It's only an example, don't bother!\n}", 
            "title": "Min SDK"
        }, 
        {
            "location": "/yara/androguard/#max-sdk", 
            "text": "Maximum SDK specifies the higger version of Android that could run this application:  rule videogames: adware\n{\n    condition:\n        androguard.max_sdk == 18 or\n        androguard.max_sdk   18 or\n        androguard.max_sdk  = 19 \n}", 
            "title": "Max SDK"
        }, 
        {
            "location": "/yara/androguard/#target-sdk", 
            "text": "The target version, theorically, specifies in which Android version the application was tested and worked fine.  rule videogames: adware\n{\n    condition:\n        androguard.target_sdk == 14 or\n        androguard.target_sdk   14 or\n        androguard.target_sdk  = 15 \n}", 
            "title": "Target SDK"
        }, 
        {
            "location": "/yara/droidbox/", 
            "text": "Introduction\n\n\nDroidbox is a tool to perform a dynamic analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the dynamic analysis.\n\n\nFirst of all, you need to import the module with the next directive at the header of the ruleset.\n\n\nimport \ndroidbox\n\n\n\n\n\nSend SMS\n\n\nIf during the dynamic analysis the application send any SMS we register that. For instance, a tipical Android trojan after the installation and execution, it download a list of premium number and then send one SMS to each one.\n\n\nYou can view this in the Droidbox report, under the \nAnalysis report\n tab of the application (SMS).\n\n\nIn order to detect this behaviour with Yara, we have created the next functionality:\n\n\n//Remind to import the droidbox module!!\n\nrule videogames\n{\n    condition:\n        droidbox.sendsms(/./) //With that we detect if the APP send an SMS to any destination.\n}\n\n\n\n\nOr maybe, you want to look for some specific destination:\n\n\ndroidbox.sendsms(\n1234\n)\n\n\n\n\nor part of it:\n\n\ndroidbox.sendsms(/23/)\n\n\n\n\nPhone calls\n\n\nSome times the applications make calls (in background or showing to the user, shamelessly!), you can detect this applications with this simple condition:\n\n\nrule videogames\n{\n    condition:\n        droidbox.phonecall(/./) //With that we detect if the APP call to any destination.\n}\n\n\n\n\nOr an specific destination:\n\n\ndroidbox.phonecall(\n123456789\n)", 
            "title": "Droidbox"
        }, 
        {
            "location": "/yara/droidbox/#introduction", 
            "text": "Droidbox is a tool to perform a dynamic analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the dynamic analysis.  First of all, you need to import the module with the next directive at the header of the ruleset.  import  droidbox", 
            "title": "Introduction"
        }, 
        {
            "location": "/yara/droidbox/#send-sms", 
            "text": "If during the dynamic analysis the application send any SMS we register that. For instance, a tipical Android trojan after the installation and execution, it download a list of premium number and then send one SMS to each one.  You can view this in the Droidbox report, under the  Analysis report  tab of the application (SMS).  In order to detect this behaviour with Yara, we have created the next functionality:  //Remind to import the droidbox module!!\n\nrule videogames\n{\n    condition:\n        droidbox.sendsms(/./) //With that we detect if the APP send an SMS to any destination.\n}  Or maybe, you want to look for some specific destination:  droidbox.sendsms( 1234 )  or part of it:  droidbox.sendsms(/23/)", 
            "title": "Send SMS"
        }, 
        {
            "location": "/yara/droidbox/#phone-calls", 
            "text": "Some times the applications make calls (in background or showing to the user, shamelessly!), you can detect this applications with this simple condition:  rule videogames\n{\n    condition:\n        droidbox.phonecall(/./) //With that we detect if the APP call to any destination.\n}  Or an specific destination:  droidbox.phonecall( 123456789 )", 
            "title": "Phone calls"
        }, 
        {
            "location": "/yara/file/", 
            "text": "Introduction\n\n\nSometimes we need to match applications with a certain hash. For that purpose we have created this module.\n\n\nFirst of all, you need to import the module with the next directive at the header of the ruleset.\n\n\nimport \nfile\n\n\n\n\n\nMD5\n\n\nFor matching with the application (or applications if there are collisions! ;)) with certain MD5 hash:\n\n\nfile.md5(string)\n\n\n\n\nrule my_apk: koodous\n{\n    condition:\n        file.md5(\nd367fd26b52353c2cce72af2435bd0d5\n)\n}\n\n\n\n\nSHA1\n\n\nFor matching with the application with this SHA1 hash:\n\n\nfile.sha1(string)\n\n\n\n\nrule my_apk: koodous\n{\n    condition:\n        file.sha1(\n2031eab6020aab492d31d7b4af3e1758ea1a3e00\n)\n}\n\n\n\n\nSHA256\n\n\nTo match with the application with a certain SHA256 hash. This is the recommended hash if you want to find or create a whitelist. In the moment of writing this docs, sha256 is still \"alive\". :)\n\n\nfile.sha256(string)\n\n\n\n\nrule my_apk: koodous\n{\n    condition:\n        file.sha256(\n3350990c4d298cdb4dc94ba886a27147e501bbf8fd504d824be53cad5cb02142\n)\n}", 
            "title": "File"
        }, 
        {
            "location": "/yara/file/#introduction", 
            "text": "Sometimes we need to match applications with a certain hash. For that purpose we have created this module.  First of all, you need to import the module with the next directive at the header of the ruleset.  import  file", 
            "title": "Introduction"
        }, 
        {
            "location": "/yara/file/#md5", 
            "text": "For matching with the application (or applications if there are collisions! ;)) with certain MD5 hash:  file.md5(string)  rule my_apk: koodous\n{\n    condition:\n        file.md5( d367fd26b52353c2cce72af2435bd0d5 )\n}", 
            "title": "MD5"
        }, 
        {
            "location": "/yara/file/#sha1", 
            "text": "For matching with the application with this SHA1 hash:  file.sha1(string)  rule my_apk: koodous\n{\n    condition:\n        file.sha1( 2031eab6020aab492d31d7b4af3e1758ea1a3e00 )\n}", 
            "title": "SHA1"
        }, 
        {
            "location": "/yara/file/#sha256", 
            "text": "To match with the application with a certain SHA256 hash. This is the recommended hash if you want to find or create a whitelist. In the moment of writing this docs, sha256 is still \"alive\". :)  file.sha256(string)  rule my_apk: koodous\n{\n    condition:\n        file.sha256( 3350990c4d298cdb4dc94ba886a27147e501bbf8fd504d824be53cad5cb02142 )\n}", 
            "title": "SHA256"
        }
    ]
}