{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Koodous Documentation Koodous is a collaborative platform for Android malware research that combines the power of online analysis tools with social interactions between the analysts over a vast APK repository. Write your Yara code Write your own Yara rules to find interesting Android apps and identify possible threats. Android researching Use our powerful search system to find the APK your are looking for between million of samples. Notifications Get notified about your detections with our notifications system.","title":"Home"},{"location":"#koodous-documentation","text":"Koodous is a collaborative platform for Android malware research that combines the power of online analysis tools with social interactions between the analysts over a vast APK repository.","title":"Koodous Documentation"},{"location":"#write-your-yara-code","text":"Write your own Yara rules to find interesting Android apps and identify possible threats.","title":"Write your Yara code"},{"location":"#android-researching","text":"Use our powerful search system to find the APK your are looking for between million of samples.","title":"Android researching"},{"location":"#notifications","text":"Get notified about your detections with our notifications system.","title":"Notifications"},{"location":"feed/analyses/","text":"Analyses feed This is a private method. If you want to use it contact us at info@koodous.com If you want to download all APKs analysis reports from our repository as soon we add them you can use this method. You can obtain a .zip file containing a JSON full of reports from the lastest 5 minutes to 60. With an argument, you can select the preferred range. Simple request example https://api.koodous.com/feed/analyses(?package=) This request redirects you to the latest .zip Curl basic example A basic analysis feed request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/analyses # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'apk_20160613T1040.zip' Curl example with params You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/analyses?package=20160610T1025 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'analysis_20160610T1025.zip' Python Script You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --analysis 5 # Downloaded analysis in analysis/analysis_20160613T1055.zip # Waiting for the next package # Waiting 5 minutes python feed.py --analysis 60 # Downloaded analysis in analysis/analysis_20160613T1055.zip # Waiting for the next package # Waiting 60 minutes Output example The previous scripts/commands returns a .zip file with the next structure: $ curl -g -O -J -L -H \"Authorization: Token YOUTOKEN\" https://api.koodous.com/feed/analyses % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 3616k 100 3616k 0 0 2374k 0 0:00:01 0:00:01 --:--:-- 2374k curl: Saved to filename 'analysis_20160610T1025.zip' $ unzip analysis_20160610T1025.zip Archive: analysis_20160610T1025.zip extracting: 8ec8bf98cfc5269ce8ad56c4465d680a7f68b14e39a58fdad2f2be26af3e44f8.json extracting: b3e8856b74ec70c40bd44706ff8dc8e9119d8c2e57cd051dbce7f90de304399f.json extracting: fd60be21459b73eb6db9d16bc15e5e632e5f6e5f874cb472617b38a62ddb0fcf.json extracting: 64b47a53214d8bee3c7abcbfe1dc4324e271ef570a9f8524bf3aa22ae35ff435.json extracting: 5c66e5705448fadaf2a1fe3e3df326bcf43bdeedbdcdc78e49ec3d46737c8e18.json extracting: a45548b940cfb92c0932fc272f638917880e82a4de1e883176fe08f6ebeb678d.json extracting: 5a098e7ab33e503ed495c0df3e279e3468271817dea1f0576ea9b5410cca4186.json extracting: 41d931b8c7baf50a6ddf85cb89137640a567c2168e4aecc6c32d24a6fd3fc7bc.json extracting: bdd5014ecd21be5a8049b873954ec65ce10e8ba0513a28d8ac6a55d1a37d28f3.json [... MORE ...] The unzip command will generate as many json files as analysis were made in that period of time. The analysis' JSON format follows the same structure as the one you can obtain from the \"Analysis report\" tab on each sample.","title":"Analyses feed"},{"location":"feed/analyses/#analyses-feed","text":"This is a private method. If you want to use it contact us at info@koodous.com If you want to download all APKs analysis reports from our repository as soon we add them you can use this method. You can obtain a .zip file containing a JSON full of reports from the lastest 5 minutes to 60. With an argument, you can select the preferred range.","title":"Analyses feed"},{"location":"feed/analyses/#simple-request-example","text":"https://api.koodous.com/feed/analyses(?package=) This request redirects you to the latest .zip","title":"Simple request example"},{"location":"feed/analyses/#curl-basic-example","text":"A basic analysis feed request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/analyses # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'apk_20160613T1040.zip'","title":"Curl basic example"},{"location":"feed/analyses/#curl-example-with-params","text":"You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/analyses?package=20160610T1025 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'analysis_20160610T1025.zip'","title":"Curl example with params"},{"location":"feed/analyses/#python-script","text":"You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --analysis 5 # Downloaded analysis in analysis/analysis_20160613T1055.zip # Waiting for the next package # Waiting 5 minutes python feed.py --analysis 60 # Downloaded analysis in analysis/analysis_20160613T1055.zip # Waiting for the next package # Waiting 60 minutes","title":"Python Script"},{"location":"feed/analyses/#output-example","text":"The previous scripts/commands returns a .zip file with the next structure: $ curl -g -O -J -L -H \"Authorization: Token YOUTOKEN\" https://api.koodous.com/feed/analyses % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 3616k 100 3616k 0 0 2374k 0 0:00:01 0:00:01 --:--:-- 2374k curl: Saved to filename 'analysis_20160610T1025.zip' $ unzip analysis_20160610T1025.zip Archive: analysis_20160610T1025.zip extracting: 8ec8bf98cfc5269ce8ad56c4465d680a7f68b14e39a58fdad2f2be26af3e44f8.json extracting: b3e8856b74ec70c40bd44706ff8dc8e9119d8c2e57cd051dbce7f90de304399f.json extracting: fd60be21459b73eb6db9d16bc15e5e632e5f6e5f874cb472617b38a62ddb0fcf.json extracting: 64b47a53214d8bee3c7abcbfe1dc4324e271ef570a9f8524bf3aa22ae35ff435.json extracting: 5c66e5705448fadaf2a1fe3e3df326bcf43bdeedbdcdc78e49ec3d46737c8e18.json extracting: a45548b940cfb92c0932fc272f638917880e82a4de1e883176fe08f6ebeb678d.json extracting: 5a098e7ab33e503ed495c0df3e279e3468271817dea1f0576ea9b5410cca4186.json extracting: 41d931b8c7baf50a6ddf85cb89137640a567c2168e4aecc6c32d24a6fd3fc7bc.json extracting: bdd5014ecd21be5a8049b873954ec65ce10e8ba0513a28d8ac6a55d1a37d28f3.json [... MORE ...] The unzip command will generate as many json files as analysis were made in that period of time. The analysis' JSON format follows the same structure as the one you can obtain from the \"Analysis report\" tab on each sample.","title":"Output example"},{"location":"feed/apks/","text":"APKs feed This is a private method. If you want to use it contact us at info@koodous.com If you want to download all APKs from our repository as soon we add them you can use this method. You can obtain a .zip file containing a list of URL samples from the lastest 5 minutes to 60. With an argument, you can choose the range you prefer. Simple request example https://api.koodous.com/feed/apks(?package=) This request redirects you to the latest .zip Curl basic example A basic APK list request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'apk_20160613T1040.zip' Curl example with params You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks?package=20160610T1025 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'apk_20160610T1025.zip' Complete script with samples download Save the code below to feed-apk.sh and run it with sh feed-apk.sh YOURTOKEN curl -s -g -O -J -L -H \"Authorization: Token $1\" https://api.koodous.com/feed/apks unzip -o apk*.zip rm apk*.zip mkdir downloads while read p; do IFS=';' read -r -a array <<< \"$p\" echo \"Downloading ${array[0]}\" curl -s ${array[1]} > downloads/${array[0]}.apk done < samples rm samples Python Script You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --apks 5 # Downloaded file apks/apk_20160613T1055.zip with samples download link # Waiting for the next package # Waiting 5 minutes python feed.py --apks 60 # Downloaded file apks/apk_20160613T1055.zip with samples download link # Waiting for the next package # Waiting 60 minutes Output example The previous scripts/commands returns a .zip with a file named samples inside: $ curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 100 346k 100 346k 0 0 217k 0 0:00:01 0:00:01 --:--:-- 1581k curl: Saved to filename 'apk_20160613T1055.zip' $ unzip apk_20160613T1055.zip Archive: apk_20160613T1055.zip extracting: samples $ head samples 4ec241ca61f1fcdd1ebc594ea3fe58c2ee3ba16a6d9e4c6a607ad41a2fcb4cc3;https://storage.koodous.com/download_id 0b1fddf4e8a3b61545c08318230b0ae6f0e4dc4bbb0ca0f0505308e4e1b861b9;https://storage.koodous.com/download_id 62a8ffe8f6583f9003d7187f927fce638030f7836f56c471758beed19bba51e3;https://storage.koodous.com/download_id 346b99d75fafd71b7d9f9e1461b6c2e060539e5435ded2e59d55b94483963313;https://storage.koodous.com/download_id 3aebe69047c15be5101738f90cdd5eff7e3fd644a41110c4a8a489a34e87d273;https://storage.koodous.com/download_id 3359d33fdc2d064ad1d383b0aab35ca7d52372c026b941b0603200a024b11674;https://storage.koodous.com/download_id 6c0846c0081a214cda84456b4c163a994f9eb38d5983727817c2954b1e24b18f;https://storage.koodous.com/download_id 33e06081e1fae22b46c3a2d40f58361e43d44b18c05f0c1b46f212323f4489e1;https://storage.koodous.com/download_id de9c173a5884f4bff30d080f3f2dc86a34b228377e443cc18e09e4f1e2f1aefc;https://storage.koodous.com/download_id 85a4b2b6768a476b46b880dcd0ed39b9e9d0fa02fd30e0d8783f81b318f7370b;https://storage.koodous.com/download_id The samples file contains the sha256 of the sample and a direct download link per line. Using this link you can download the sample directly.","title":"APKs feed"},{"location":"feed/apks/#apks-feed","text":"This is a private method. If you want to use it contact us at info@koodous.com If you want to download all APKs from our repository as soon we add them you can use this method. You can obtain a .zip file containing a list of URL samples from the lastest 5 minutes to 60. With an argument, you can choose the range you prefer.","title":"APKs feed"},{"location":"feed/apks/#simple-request-example","text":"https://api.koodous.com/feed/apks(?package=) This request redirects you to the latest .zip","title":"Simple request example"},{"location":"feed/apks/#curl-basic-example","text":"A basic APK list request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'apk_20160613T1040.zip'","title":"Curl basic example"},{"location":"feed/apks/#curl-example-with-params","text":"You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks?package=20160610T1025 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'apk_20160610T1025.zip'","title":"Curl example with params"},{"location":"feed/apks/#complete-script-with-samples-download","text":"Save the code below to feed-apk.sh and run it with sh feed-apk.sh YOURTOKEN curl -s -g -O -J -L -H \"Authorization: Token $1\" https://api.koodous.com/feed/apks unzip -o apk*.zip rm apk*.zip mkdir downloads while read p; do IFS=';' read -r -a array <<< \"$p\" echo \"Downloading ${array[0]}\" curl -s ${array[1]} > downloads/${array[0]}.apk done < samples rm samples","title":"Complete script with samples download"},{"location":"feed/apks/#python-script","text":"You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --apks 5 # Downloaded file apks/apk_20160613T1055.zip with samples download link # Waiting for the next package # Waiting 5 minutes python feed.py --apks 60 # Downloaded file apks/apk_20160613T1055.zip with samples download link # Waiting for the next package # Waiting 60 minutes","title":"Python Script"},{"location":"feed/apks/#output-example","text":"The previous scripts/commands returns a .zip with a file named samples inside: $ curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/apks % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 100 346k 100 346k 0 0 217k 0 0:00:01 0:00:01 --:--:-- 1581k curl: Saved to filename 'apk_20160613T1055.zip' $ unzip apk_20160613T1055.zip Archive: apk_20160613T1055.zip extracting: samples $ head samples 4ec241ca61f1fcdd1ebc594ea3fe58c2ee3ba16a6d9e4c6a607ad41a2fcb4cc3;https://storage.koodous.com/download_id 0b1fddf4e8a3b61545c08318230b0ae6f0e4dc4bbb0ca0f0505308e4e1b861b9;https://storage.koodous.com/download_id 62a8ffe8f6583f9003d7187f927fce638030f7836f56c471758beed19bba51e3;https://storage.koodous.com/download_id 346b99d75fafd71b7d9f9e1461b6c2e060539e5435ded2e59d55b94483963313;https://storage.koodous.com/download_id 3aebe69047c15be5101738f90cdd5eff7e3fd644a41110c4a8a489a34e87d273;https://storage.koodous.com/download_id 3359d33fdc2d064ad1d383b0aab35ca7d52372c026b941b0603200a024b11674;https://storage.koodous.com/download_id 6c0846c0081a214cda84456b4c163a994f9eb38d5983727817c2954b1e24b18f;https://storage.koodous.com/download_id 33e06081e1fae22b46c3a2d40f58361e43d44b18c05f0c1b46f212323f4489e1;https://storage.koodous.com/download_id de9c173a5884f4bff30d080f3f2dc86a34b228377e443cc18e09e4f1e2f1aefc;https://storage.koodous.com/download_id 85a4b2b6768a476b46b880dcd0ed39b9e9d0fa02fd30e0d8783f81b318f7370b;https://storage.koodous.com/download_id The samples file contains the sha256 of the sample and a direct download link per line. Using this link you can download the sample directly.","title":"Output example"},{"location":"feed/detected/","text":"Detected samples feed This is a private method. If you want to use it contact us at info@koodous.com If you want to download the analysis of the detected samples from our repository as soon we add them you can use this method. You can obtain a .zip file containing a JSON full of reports from the latest 5 minutes to 60. With an argument, you can select the preferred range. Simple request example https://api.koodous.com/feed/detected(?package=) This request redirects you to the latest .zip Curl basic example A basic analysis feed request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/detected # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'detected_20170411T1040.zip' Curl example with params You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/detected?package=20170411T1020 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'detected_20170411T1020.zip' Python Script You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --detected 5 # Downloaded file detected/detected_20160613T1055.zip with analyses of detected samples # Waiting for the next package # Waiting 5 minutes python feed.py --detected 60 # Downloaded file detected/detected_20160613T10.zip with analyses of detected samples # Waiting for the next package # Waiting 60 minutes Output example The previous scripts/commands returns a .zip file with the next structure: $ curl -g -O -J -L -H \"Authorization: Token YOUTOKEN\" https://api.koodous.com/feed/detected % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 3616k 100 3616k 0 0 2374k 0 0:00:01 0:00:01 --:--:-- 2374k curl: Saved to filename 'detected_20170411T1020.zip' $ unzip detected_20170411T1020.zip Archive: detected_20170411T1020.zip extracting: 8ec8bf98cfc5269ce8ad56c4465d680a7f68b14e39a58fdad2f2be26af3e44f8.json extracting: b3e8856b74ec70c40bd44706ff8dc8e9119d8c2e57cd051dbce7f90de304399f.json extracting: fd60be21459b73eb6db9d16bc15e5e632e5f6e5f874cb472617b38a62ddb0fcf.json extracting: 64b47a53214d8bee3c7abcbfe1dc4324e271ef570a9f8524bf3aa22ae35ff435.json extracting: 5c66e5705448fadaf2a1fe3e3df326bcf43bdeedbdcdc78e49ec3d46737c8e18.json extracting: a45548b940cfb92c0932fc272f638917880e82a4de1e883176fe08f6ebeb678d.json extracting: 5a098e7ab33e503ed495c0df3e279e3468271817dea1f0576ea9b5410cca4186.json extracting: 41d931b8c7baf50a6ddf85cb89137640a567c2168e4aecc6c32d24a6fd3fc7bc.json extracting: bdd5014ecd21be5a8049b873954ec65ce10e8ba0513a28d8ac6a55d1a37d28f3.json [... MORE ...] The unzip command will generate as many json files as analysis were made in that period of time. The analyses' JSON format follows the same structure as the one you can obtain from the \"Analysis report\" tab on each sample.","title":"Detected feed"},{"location":"feed/detected/#detected-samples-feed","text":"This is a private method. If you want to use it contact us at info@koodous.com If you want to download the analysis of the detected samples from our repository as soon we add them you can use this method. You can obtain a .zip file containing a JSON full of reports from the latest 5 minutes to 60. With an argument, you can select the preferred range.","title":"Detected samples feed"},{"location":"feed/detected/#simple-request-example","text":"https://api.koodous.com/feed/detected(?package=) This request redirects you to the latest .zip","title":"Simple request example"},{"location":"feed/detected/#curl-basic-example","text":"A basic analysis feed request. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/detected # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 14283 100 14283 0 0 7251 0 0:00:01 0:00:01 --:--:-- 108k # curl: Saved to filename 'detected_20170411T1040.zip'","title":"Curl basic example"},{"location":"feed/detected/#curl-example-with-params","text":"You can download a specific package using ?package param: The package should have the next format: YYYYMMDDTHHMM. Example: 20160510T1025 (The latest number can be only 5 or 0). Each package is available a week right after its creation. curl -g -O -J -L -H \"Authorization: Token YOURTOKEN\" https://api.koodous.com/feed/detected?package=20170411T1020 # % Total % Received % Xferd Average Speed Time Time Time Current # Dload Upload Total Spent Left Speed # 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0 # 100 27305 100 27305 0 0 13071 0 0:00:02 0:00:02 --:--:-- 66924 # curl: Saved to filename 'detected_20170411T1020.zip'","title":"Curl example with params"},{"location":"feed/detected/#python-script","text":"You can use our feed.py script. Check it out here The usage is simple: modify the script and replace TOKEN = \"\" with your API token and then: python feed.py --detected 5 # Downloaded file detected/detected_20160613T1055.zip with analyses of detected samples # Waiting for the next package # Waiting 5 minutes python feed.py --detected 60 # Downloaded file detected/detected_20160613T10.zip with analyses of detected samples # Waiting for the next package # Waiting 60 minutes","title":"Python Script"},{"location":"feed/detected/#output-example","text":"The previous scripts/commands returns a .zip file with the next structure: $ curl -g -O -J -L -H \"Authorization: Token YOUTOKEN\" https://api.koodous.com/feed/detected % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 3616k 100 3616k 0 0 2374k 0 0:00:01 0:00:01 --:--:-- 2374k curl: Saved to filename 'detected_20170411T1020.zip' $ unzip detected_20170411T1020.zip Archive: detected_20170411T1020.zip extracting: 8ec8bf98cfc5269ce8ad56c4465d680a7f68b14e39a58fdad2f2be26af3e44f8.json extracting: b3e8856b74ec70c40bd44706ff8dc8e9119d8c2e57cd051dbce7f90de304399f.json extracting: fd60be21459b73eb6db9d16bc15e5e632e5f6e5f874cb472617b38a62ddb0fcf.json extracting: 64b47a53214d8bee3c7abcbfe1dc4324e271ef570a9f8524bf3aa22ae35ff435.json extracting: 5c66e5705448fadaf2a1fe3e3df326bcf43bdeedbdcdc78e49ec3d46737c8e18.json extracting: a45548b940cfb92c0932fc272f638917880e82a4de1e883176fe08f6ebeb678d.json extracting: 5a098e7ab33e503ed495c0df3e279e3468271817dea1f0576ea9b5410cca4186.json extracting: 41d931b8c7baf50a6ddf85cb89137640a567c2168e4aecc6c32d24a6fd3fc7bc.json extracting: bdd5014ecd21be5a8049b873954ec65ce10e8ba0513a28d8ac6a55d1a37d28f3.json [... MORE ...] The unzip command will generate as many json files as analysis were made in that period of time. The analyses' JSON format follows the same structure as the one you can obtain from the \"Analysis report\" tab on each sample.","title":"Output example"},{"location":"mobile/googleplay-es/","text":"Koodous Mobile es la aplicaci\u00f3n oficial de Koodous. Koodous es una plataforma colaborativa para la detecci\u00f3n de aplicaciones Android mediante el uso de reglas Yara. Detectar aplicaciones fraudulentas La comunidad mediante el uso de reglas para la detecci\u00f3n de aplicaciones fraudulentas y el voto de la aplicaciones, determina si una aplicaci\u00f3n es fraudulenta. El sistema detectar\u00e1 todas las aplicaciones instaladas y las cruzar\u00e1 con la base de datos de Koodous, avis\u00e1ndole en caso de que alguna aplicaci\u00f3n instalada en su dispositivo est\u00e9 catalogada como fraudulenta. Analistas Los analistas podr\u00e1n vincular su dispositivo con su cuenta de Koodous, para que solo se le apliquen a su m\u00f3vil las reglas sociales creadas por ellos y de sus seguidores.","title":"Googleplay es"},{"location":"mobile/googleplay-es/#detectar-aplicaciones-fraudulentas","text":"La comunidad mediante el uso de reglas para la detecci\u00f3n de aplicaciones fraudulentas y el voto de la aplicaciones, determina si una aplicaci\u00f3n es fraudulenta. El sistema detectar\u00e1 todas las aplicaciones instaladas y las cruzar\u00e1 con la base de datos de Koodous, avis\u00e1ndole en caso de que alguna aplicaci\u00f3n instalada en su dispositivo est\u00e9 catalogada como fraudulenta.","title":"Detectar aplicaciones fraudulentas"},{"location":"mobile/googleplay-es/#analistas","text":"Los analistas podr\u00e1n vincular su dispositivo con su cuenta de Koodous, para que solo se le apliquen a su m\u00f3vil las reglas sociales creadas por ellos y de sus seguidores.","title":"Analistas"},{"location":"mobile/googleplay/","text":"The Koodous app is on its way to Google Play. In the meantime, let us point out its main features: The app will behave in one out of two ways depending if it has been linked with the user's Koodous web account or not. Detect fraudulent apps Using Yara rules and the votes of the Koodous community, the app can establish if there are fraudulent applications installed on your device. Our application will cross your installed apps with the Koodous database, warning you if any of the applications in your device is tagged as a fraud. Analysts The analysts in the Koodous community can link their devices with their Koodous web account. This way, only the social rules made by them and by the analysts they are following will be applied to their devices.","title":"Googleplay"},{"location":"mobile/googleplay/#detect-fraudulent-apps","text":"Using Yara rules and the votes of the Koodous community, the app can establish if there are fraudulent applications installed on your device. Our application will cross your installed apps with the Koodous database, warning you if any of the applications in your device is tagged as a fraud.","title":"Detect fraudulent apps"},{"location":"mobile/googleplay/#analysts","text":"The analysts in the Koodous community can link their devices with their Koodous web account. This way, only the social rules made by them and by the analysts they are following will be applied to their devices.","title":"Analysts"},{"location":"rest-api/activity/","text":"Activity","title":"Activity"},{"location":"rest-api/activity/#activity","text":"","title":"Activity"},{"location":"rest-api/analysts/","text":"Analysts Method to list koodous's analysts Resource url/s https://api.koodous.com/analysts https://api.koodous.com/analysts/:username Object details username Analyst's Username first_name Analyst's first name last_name Analyst's last name date_joined Account creation date last_login Last login date total_public_rulesets Number of public analyst's rulesets total_followers Number of followers total_following Total of analyst that the user is following total_comments Total comments written by analyst avatar_url Analyst image_ occupation Occupation bio Bio twitter_user Username in twitter Resource information Response formats JSON Requires authentication Yes Requests per minute 500 Parameters :username Username lookup ( Required for analyst detail request ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/analysts?page=1&page_size=5 https://api.koodous.com/analysts/user1 Example request https://api.koodous.com/apks/analysts Example result { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", }, ] } Update analyst info An analyst can edit his profile information with the next example request: Remote Address: koodous.com Request URL: https://api.koodous.com/analysts/user1 Request Method: PATCH Status Code: 200 OK Payload and response should looks like following: { \"first_name\": \"Andrew\", \"last_name\": \"Smith2\" }x Analyst extra methods Analyst related info can be accesed from /analysts/:username . GET /analysts/:username/followers Analysts list following requested username GET /analysts/:username/following Analysts list followed by requested username GET /analysts/:username/comments Comments written by requested username GET /analysts/:username/activity Requested username activity GET /analysts/:username/rulesets Public rulesets of requested username GET /analysts/:username/follow Start following analyst GET /analysts/:username/unfollow Stop following analyst","title":"Analysts"},{"location":"rest-api/analysts/#analysts","text":"Method to list koodous's analysts","title":"Analysts"},{"location":"rest-api/analysts/#resource-urls","text":"https://api.koodous.com/analysts https://api.koodous.com/analysts/:username","title":"Resource url/s"},{"location":"rest-api/analysts/#object-details","text":"username Analyst's Username first_name Analyst's first name last_name Analyst's last name date_joined Account creation date last_login Last login date total_public_rulesets Number of public analyst's rulesets total_followers Number of followers total_following Total of analyst that the user is following total_comments Total comments written by analyst avatar_url Analyst image_ occupation Occupation bio Bio twitter_user Username in twitter","title":"Object details"},{"location":"rest-api/analysts/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 500","title":"Resource information"},{"location":"rest-api/analysts/#parameters","text":":username Username lookup ( Required for analyst detail request ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/analysts?page=1&page_size=5 https://api.koodous.com/analysts/user1","title":"Parameters"},{"location":"rest-api/analysts/#example-request","text":"https://api.koodous.com/apks/analysts","title":"Example request"},{"location":"rest-api/analysts/#example-result","text":"{ \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", }, ] }","title":"Example result"},{"location":"rest-api/analysts/#update-analyst-info","text":"An analyst can edit his profile information with the next example request: Remote Address: koodous.com Request URL: https://api.koodous.com/analysts/user1 Request Method: PATCH Status Code: 200 OK Payload and response should looks like following: { \"first_name\": \"Andrew\", \"last_name\": \"Smith2\" }x","title":"Update analyst info"},{"location":"rest-api/analysts/#analyst-extra-methods","text":"Analyst related info can be accesed from /analysts/:username . GET /analysts/:username/followers Analysts list following requested username GET /analysts/:username/following Analysts list followed by requested username GET /analysts/:username/comments Comments written by requested username GET /analysts/:username/activity Requested username activity GET /analysts/:username/rulesets Public rulesets of requested username GET /analysts/:username/follow Start following analyst GET /analysts/:username/unfollow Stop following analyst","title":"Analyst extra methods"},{"location":"rest-api/apk-analysis/","text":"APK Analysis Method to get an apk's analysis report. Resource url/s https://api.koodous.com/apks/:sha256/analysis Parameters :sha256 sha256 lookup ( Required ) Example request https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analysis Example in python import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/analysis\" % sha256 r = requests.get(url=url_koodous) r.json() Check pykoodous.py, a python API manager script . Analysis request If you want to request an APK analysis you need an API token . Example request https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analyze Example in python import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/analyze\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token %s' % \"YOURTOKENHERE\"}) r.json()","title":"APK Analysis"},{"location":"rest-api/apk-analysis/#apk-analysis","text":"Method to get an apk's analysis report.","title":"APK Analysis"},{"location":"rest-api/apk-analysis/#resource-urls","text":"https://api.koodous.com/apks/:sha256/analysis","title":"Resource url/s"},{"location":"rest-api/apk-analysis/#parameters","text":":sha256 sha256 lookup ( Required )","title":"Parameters"},{"location":"rest-api/apk-analysis/#example-request","text":"https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analysis","title":"Example request"},{"location":"rest-api/apk-analysis/#example-in-python","text":"import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/analysis\" % sha256 r = requests.get(url=url_koodous) r.json() Check pykoodous.py, a python API manager script .","title":"Example in python"},{"location":"rest-api/apk-analysis/#analysis-request","text":"If you want to request an APK analysis you need an API token .","title":"Analysis request"},{"location":"rest-api/apk-analysis/#example-request_1","text":"https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/analyze","title":"Example request"},{"location":"rest-api/apk-analysis/#example-in-python_1","text":"import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/analyze\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token %s' % \"YOURTOKENHERE\"}) r.json()","title":"Example in python"},{"location":"rest-api/apk-comments/","text":"APKs comments Method to list apk comments with pagination Resource url/s https://api.koodous.com/apks/:sha256/comments Object details id Comment ID author Analyst object ( analysts ) apk APK sha256 hash created_on The date when comment was created on koodous modified_on The date when comment was modified text The comment's content Resource information Response formats JSON Requires authentication Yes Requests per minute 60 Parameters :sha256 sha256 lookup ( Required ) ?cursor Specify cursor of current results ?page_size A value of users votes Examples: https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D Example request https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments Example result { \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"id\": 114, \"author\": { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", \"can_invite\": true }, \"apk\": \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\", \"created_on\": 1429698724, \"modified_on\": 1429698724, \"text\": \"test\" } ] } Comment creation Comment creation can be done with the next request: Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/comments Request Method: POST Status Code: 201 CREATED Payload should looks like following: {\"text\": \"test2\"} Comment deletion A comment can be delete if the authenticated user is the owner. The request should looks like following: Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/comments/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"APK Comments"},{"location":"rest-api/apk-comments/#apks-comments","text":"Method to list apk comments with pagination","title":"APKs comments"},{"location":"rest-api/apk-comments/#resource-urls","text":"https://api.koodous.com/apks/:sha256/comments","title":"Resource url/s"},{"location":"rest-api/apk-comments/#object-details","text":"id Comment ID author Analyst object ( analysts ) apk APK sha256 hash created_on The date when comment was created on koodous modified_on The date when comment was modified text The comment's content","title":"Object details"},{"location":"rest-api/apk-comments/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 60","title":"Resource information"},{"location":"rest-api/apk-comments/#parameters","text":":sha256 sha256 lookup ( Required ) ?cursor Specify cursor of current results ?page_size A value of users votes Examples: https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D","title":"Parameters"},{"location":"rest-api/apk-comments/#example-request","text":"https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/comments","title":"Example request"},{"location":"rest-api/apk-comments/#example-result","text":"{ \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"id\": 114, \"author\": { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", \"can_invite\": true }, \"apk\": \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\", \"created_on\": 1429698724, \"modified_on\": 1429698724, \"text\": \"test\" } ] }","title":"Example result"},{"location":"rest-api/apk-comments/#comment-creation","text":"Comment creation can be done with the next request: Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/comments Request Method: POST Status Code: 201 CREATED Payload should looks like following: {\"text\": \"test2\"}","title":"Comment creation"},{"location":"rest-api/apk-comments/#comment-deletion","text":"A comment can be delete if the authenticated user is the owner. The request should looks like following: Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/comments/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"Comment deletion"},{"location":"rest-api/apk-download/","text":"APK Download Method to get a download url of an especific sample. Resource url/s https://api.koodous.com/apks/:sha256/download Parameters :sha256 sha256 lookup ( Required ) Example request https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/download Example result { \"download_url\": \"https://lmcn2.koodous.com/download/JDSS8lPNBQCed8qOy6gu0ECtSYDJwqmRr8B+lDie0vTPiJZz2IViaj3xiSAsWHh3eJKsc2LkdL0ZLhEyk9P3LJbusF+OxchdicKKyxvCpPyIM2Km7yIou7P7QOCkGajS\" } Note: The download url expires after 15 minutes. Example in python import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/download\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'}) if r.status_code is 200: testfile = urllib.URLopener() testfile.retrieve(r.json().get('download_url'), ffile) Check pykoodous.py, a python API manager script .","title":"APK Download"},{"location":"rest-api/apk-download/#apk-download","text":"Method to get a download url of an especific sample.","title":"APK Download"},{"location":"rest-api/apk-download/#resource-urls","text":"https://api.koodous.com/apks/:sha256/download","title":"Resource url/s"},{"location":"rest-api/apk-download/#parameters","text":":sha256 sha256 lookup ( Required )","title":"Parameters"},{"location":"rest-api/apk-download/#example-request","text":"https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/download","title":"Example request"},{"location":"rest-api/apk-download/#example-result","text":"{ \"download_url\": \"https://lmcn2.koodous.com/download/JDSS8lPNBQCed8qOy6gu0ECtSYDJwqmRr8B+lDie0vTPiJZz2IViaj3xiSAsWHh3eJKsc2LkdL0ZLhEyk9P3LJbusF+OxchdicKKyxvCpPyIM2Km7yIou7P7QOCkGajS\" } Note: The download url expires after 15 minutes.","title":"Example result"},{"location":"rest-api/apk-download/#example-in-python","text":"import requests import urllib sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/download\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'}) if r.status_code is 200: testfile = urllib.URLopener() testfile.retrieve(r.json().get('download_url'), ffile) Check pykoodous.py, a python API manager script .","title":"Example in python"},{"location":"rest-api/apk-upload/","text":"APK Upload Method to get an upload url for an especific sample. Resource url/s https://api.koodous.com/apks/:sha256/get_upload_url Parameters :sha256 sha256 lookup ( Required ) Example request https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/get_upload_url Example result { \"upload_url\":\"https://lmcn2.koodous.com/upload/JDSS8lPNBQCed8qOy6gu0CmvsheZhYdQDM6UMPa3Oz7uJSbCRbdez0c9DKxoXUf7P0dobSZUiB2njx4f3xjX1Sq6pJM4Q0NwuokwL7glirbF3sSR8wG0BA0NmIP3+H8g\" } Note: The upload url expires after 15 minutes. Example in python import requests sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/get_upload_url\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'}) requests.post(url=r.json().get('upload_url'), files=files)","title":"APK Upload"},{"location":"rest-api/apk-upload/#apk-upload","text":"Method to get an upload url for an especific sample.","title":"APK Upload"},{"location":"rest-api/apk-upload/#resource-urls","text":"https://api.koodous.com/apks/:sha256/get_upload_url","title":"Resource url/s"},{"location":"rest-api/apk-upload/#parameters","text":":sha256 sha256 lookup ( Required )","title":"Parameters"},{"location":"rest-api/apk-upload/#example-request","text":"https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544/get_upload_url","title":"Example request"},{"location":"rest-api/apk-upload/#example-result","text":"{ \"upload_url\":\"https://lmcn2.koodous.com/upload/JDSS8lPNBQCed8qOy6gu0CmvsheZhYdQDM6UMPa3Oz7uJSbCRbdez0c9DKxoXUf7P0dobSZUiB2njx4f3xjX1Sq6pJM4Q0NwuokwL7glirbF3sSR8wG0BA0NmIP3+H8g\" } Note: The upload url expires after 15 minutes.","title":"Example result"},{"location":"rest-api/apk-upload/#example-in-python","text":"import requests sha256 = \"2419c7f2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\" url_koodous = \"https://api.koodous.com/apks/%s/get_upload_url\" % sha256 r = requests.get(url=url_koodous, headers={'Authorization': 'Token *****your_token*****'}) requests.post(url=r.json().get('upload_url'), files=files)","title":"Example in python"},{"location":"rest-api/apk-votes/","text":"APK Votes Method to vote an APK sample Resource url/s https://api.koodous.com/apks/:sha256/votes Resource information Response formats JSON Requires authentication Yes Requests per minute 60 Parameters :sha256 sha256 lookup ( Required ) Example request Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/votes Request Method: POST Status Code: 201 CREATED Payload options {kind: \"positive\"} {kind: \"negative\"}","title":"APK Votes"},{"location":"rest-api/apk-votes/#apk-votes","text":"Method to vote an APK sample","title":"APK Votes"},{"location":"rest-api/apk-votes/#resource-urls","text":"https://api.koodous.com/apks/:sha256/votes","title":"Resource url/s"},{"location":"rest-api/apk-votes/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 60","title":"Resource information"},{"location":"rest-api/apk-votes/#parameters","text":":sha256 sha256 lookup ( Required )","title":"Parameters"},{"location":"rest-api/apk-votes/#example-request","text":"Remote Address: koodous.com Request URL: https://api.koodous.com/apks/:sha256/votes Request Method: POST Status Code: 201 CREATED","title":"Example request"},{"location":"rest-api/apk-votes/#payload-options","text":"{kind: \"positive\"} {kind: \"negative\"}","title":"Payload options"},{"location":"rest-api/apks/","text":"APKs This method returns a paginated list of apks Resource url/s https://api.koodous.com/apks https://api.koodous.com/apks/:sha256 Object details created_on The date when APKs were created on koodous. rating A value of users votes image APP image used shown on devices md5 md5 hash sha1 sha1 hash sha256 sha256 hash app App name shown on devices package_name app package identifier company Company or developer of the app displayed_version APP version shown on market size APP size in bytes analyzed APK has been analyzed, or not, by koodous system trusted APK is inside Koodous whitelist detected APK has been detected by Koodous community corrupted APK cannot be exectuted correctly Parameters :sha256 sha256 lookup ?cursor Specify cursor of current results Examples: https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544 https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D Note: Our advanced search system can be used in our API as a simple search, check advanced search section Example request https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D Example result { \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"created_on\": 1429629827, \"rating\": 0, \"image\": \"https://koodous.com/media/apk_images/tmpYDOLaE\", \"tags\": [], \"md5\": \"8fee025ee05aa599a29ef6563b24d027\", \"sha1\": \"1d4d60016e4c404886d5a6e624f0cece6d45bc49\", \"sha256\": \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\", \"app\": \"Barbershop Settings\", \"package_name\": \"com.hallico.barbershoppole\", \"company\": \"Hallico Corporation\", \"displayed_version\": \"1.8\", \"size\": 2106565, \"stored\": true, \"analyzed\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\" }, { \"created_on\": 1429629826, \"rating\": 0, \"image\": \"https://koodous.com/media/apk_images/tmphKmwA2\", \"tags\": [], \"md5\": \"795ec6217530a3531c66f3bb99d40802\", \"sha1\": \"9eca8b3a3c03542ef890b9074dc09430bf736068\", \"sha256\": \"249c7fe2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\", \"app\": \"\u79c1\u5bc6\u5feb\u64ad\", \"package_name\": \"afhl.ktld.uysg.ptey\", \"company\": \"qmnu\", \"displayed_version\": \"7.8.0\", \"size\": 2337458, \"stored\": true, \"analyzed\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\" }, ] } Python examples A basic APK list request. import requests r = requests.get(url=\"https://api.koodous.com/apks\") r.json() # {\"next\":\"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [... An APK search request import requests params = {'search':'Whatsapp'} r = requests.get(url=\"https://api.koodous.com/apks\", params=params) r.json() # {\"next\":\"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [... An APK detail import requests sha256 = \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\" r = requests.get(url=\"https://api.koodous.com/apks/%s\" % sha256) r.json() #{\"created_on\":1429629827,\"rating\":0,\"image\":\"https://cdn1.koodous.com/apk_images/2015/4/21/tmpYDOLaE\",\"tags\":[],\"md5\":\"8fee025ee05aa599a29ef6563b24d027\"...","title":"APKs"},{"location":"rest-api/apks/#apks","text":"This method returns a paginated list of apks","title":"APKs"},{"location":"rest-api/apks/#resource-urls","text":"https://api.koodous.com/apks https://api.koodous.com/apks/:sha256","title":"Resource url/s"},{"location":"rest-api/apks/#object-details","text":"created_on The date when APKs were created on koodous. rating A value of users votes image APP image used shown on devices md5 md5 hash sha1 sha1 hash sha256 sha256 hash app App name shown on devices package_name app package identifier company Company or developer of the app displayed_version APP version shown on market size APP size in bytes analyzed APK has been analyzed, or not, by koodous system trusted APK is inside Koodous whitelist detected APK has been detected by Koodous community corrupted APK cannot be exectuted correctly","title":"Object details"},{"location":"rest-api/apks/#parameters","text":":sha256 sha256 lookup ?cursor Specify cursor of current results Examples: https://api.koodous.com/apks/cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544 https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D Note: Our advanced search system can be used in our API as a simple search, check advanced search section","title":"Parameters"},{"location":"rest-api/apks/#example-request","text":"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D","title":"Example request"},{"location":"rest-api/apks/#example-result","text":"{ \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"created_on\": 1429629827, \"rating\": 0, \"image\": \"https://koodous.com/media/apk_images/tmpYDOLaE\", \"tags\": [], \"md5\": \"8fee025ee05aa599a29ef6563b24d027\", \"sha1\": \"1d4d60016e4c404886d5a6e624f0cece6d45bc49\", \"sha256\": \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\", \"app\": \"Barbershop Settings\", \"package_name\": \"com.hallico.barbershoppole\", \"company\": \"Hallico Corporation\", \"displayed_version\": \"1.8\", \"size\": 2106565, \"stored\": true, \"analyzed\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\" }, { \"created_on\": 1429629826, \"rating\": 0, \"image\": \"https://koodous.com/media/apk_images/tmphKmwA2\", \"tags\": [], \"md5\": \"795ec6217530a3531c66f3bb99d40802\", \"sha1\": \"9eca8b3a3c03542ef890b9074dc09430bf736068\", \"sha256\": \"249c7fe2730ecf8944cd4bbd0f3b3157c62f2c3d1f78f6f29e07b4c818c15487\", \"app\": \"\u79c1\u5bc6\u5feb\u64ad\", \"package_name\": \"afhl.ktld.uysg.ptey\", \"company\": \"qmnu\", \"displayed_version\": \"7.8.0\", \"size\": 2337458, \"stored\": true, \"analyzed\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\" }, ] }","title":"Example result"},{"location":"rest-api/apks/#python-examples","text":"A basic APK list request. import requests r = requests.get(url=\"https://api.koodous.com/apks\") r.json() # {\"next\":\"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [... An APK search request import requests params = {'search':'Whatsapp'} r = requests.get(url=\"https://api.koodous.com/apks\", params=params) r.json() # {\"next\":\"https://api.koodous.com/apks?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [... An APK detail import requests sha256 = \"cc489e3296408abbfbd5e2aad0665abd60bae3442d10bcc702a7e8424e547544\" r = requests.get(url=\"https://api.koodous.com/apks/%s\" % sha256) r.json() #{\"created_on\":1429629827,\"rating\":0,\"image\":\"https://cdn1.koodous.com/apk_images/2015/4/21/tmpYDOLaE\",\"tags\":[],\"md5\":\"8fee025ee05aa599a29ef6563b24d027\"...","title":"Python examples"},{"location":"rest-api/getting-started/","text":"Getting started The Koodous public REST API gives you the chance to create your own Koodous client for different platforms. Creating an account You can use our API without authentication token. However, there are some requests that require an user token to be done, such as voting, comment and APK-related. In order to get your API token just create your account on koodous and check your user settings page to get your access token. Authentication To use the requests that require authentication you need to specify your user token using the Authorization header. A request with token c080ddd1fab46bc919ca0d62299e9995b1886853 should look like the following: GET /apks Authorization: Token c080ddd1fab46bc919ca0d62299e9995b1886853 Response Response format is JSON. The example response of the previous request will look like this: { \"count\": 12312, \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE2LTAxLTEzKzEwJTNBMzYlM0EwNyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"created_on\": 1429390443, \"rating\": 0, \"image\": \"https://cdn1.koodous.com/apk_images/tmpFESIMk\", \"tags\": [], \"md5\": \"ee644f55b915c9fb3362be28647eb976\", \"sha1\": \"dee89c3cb639ca791ea3e7e2da3d7b8ac7972e13\", \"sha256\": \"4891047860f004894de77b4c8018e3f69bb50a210159b77119e90dcd87860e98\", \"app\": \"PornNow\", \"package_name\": \"com.digitaran.pornnow\", \"company\": \"Digitaran\", \"displayed_version\": \"1.0\", \"size\": 1040818, \"stored\": true, \"analyzed\": true, \"is_apk\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\", \"on_devices\": false }, ... ] } Python example Here you have an example using Python and requests library : import requests url = \"https://api.koodous.com/apks\" headers = {\"Authorization\":\"Token c080ddd1fab46fc919ca0d62299e9995b1886853\"} r = requests.get(url=url, headers=headers) r.status_code #200 r.json() #JSON response Python API Class There is a python example class with almost all Koodous API methods, check it out: pykoodous.py","title":"Getting started"},{"location":"rest-api/getting-started/#getting-started","text":"The Koodous public REST API gives you the chance to create your own Koodous client for different platforms.","title":"Getting started"},{"location":"rest-api/getting-started/#creating-an-account","text":"You can use our API without authentication token. However, there are some requests that require an user token to be done, such as voting, comment and APK-related. In order to get your API token just create your account on koodous and check your user settings page to get your access token.","title":"Creating an account"},{"location":"rest-api/getting-started/#authentication","text":"To use the requests that require authentication you need to specify your user token using the Authorization header. A request with token c080ddd1fab46bc919ca0d62299e9995b1886853 should look like the following: GET /apks Authorization: Token c080ddd1fab46bc919ca0d62299e9995b1886853","title":"Authentication"},{"location":"rest-api/getting-started/#response","text":"Response format is JSON. The example response of the previous request will look like this: { \"count\": 12312, \"next\": \"https://api.koodous.com/apks?cursor=cD0yMDE2LTAxLTEzKzEwJTNBMzYlM0EwNyUyQjAwJTNBMDA%3D\", \"previous\": null, \"results\": [ { \"created_on\": 1429390443, \"rating\": 0, \"image\": \"https://cdn1.koodous.com/apk_images/tmpFESIMk\", \"tags\": [], \"md5\": \"ee644f55b915c9fb3362be28647eb976\", \"sha1\": \"dee89c3cb639ca791ea3e7e2da3d7b8ac7972e13\", \"sha256\": \"4891047860f004894de77b4c8018e3f69bb50a210159b77119e90dcd87860e98\", \"app\": \"PornNow\", \"package_name\": \"com.digitaran.pornnow\", \"company\": \"Digitaran\", \"displayed_version\": \"1.0\", \"size\": 1040818, \"stored\": true, \"analyzed\": true, \"is_apk\": true, \"trusted\": false, \"detected\": false, \"corrupted\": false, \"repo\": \"\", \"on_devices\": false }, ... ] }","title":"Response"},{"location":"rest-api/getting-started/#python-example","text":"Here you have an example using Python and requests library : import requests url = \"https://api.koodous.com/apks\" headers = {\"Authorization\":\"Token c080ddd1fab46fc919ca0d62299e9995b1886853\"} r = requests.get(url=url, headers=headers) r.status_code #200 r.json() #JSON response","title":"Python example"},{"location":"rest-api/getting-started/#python-api-class","text":"There is a python example class with almost all Koodous API methods, check it out: pykoodous.py","title":"Python API Class"},{"location":"rest-api/notifications/","text":"Notifications","title":"Notifications"},{"location":"rest-api/notifications/#notifications","text":"","title":"Notifications"},{"location":"rest-api/public_rulesets/","text":"Public Rulesets Resource url/s https://api.koodous.com/public_rulesets https://api.koodous.com/public_rulesets/:id Object details id Ruleset ID active Ruleset is active or not. created_on The date when ruleset was created on koodous. detections Total APK detections for this ruleset. modified_on The date when comment was modified. name Ruleset's name. privacy Ruleset's privacy (public or private). rules The ruleset content. send_notifications The ruleset will notify detections or not. social The ruleset is inside the Koodous detection system. Resource information Response formats JSON Requires authentication Yes Requests per minute 60 Parameters :sha256 sha256 lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/public_rulesets https://api.koodous.com/public_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on Example request https://api.koodous.com/public_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on Example result { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 497, \"created_on\": 1431685981, \"modified_on\": 1431685981, \"name\": \"New Ruleset\", \"rules\": \"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\", \"active\": false, \"privacy\": \"public\", \"social\": false, \"deleted\": false, \"send_notifications\": true, \"detections\": 0, \"rating\": 0, } ] } Ruleset creation Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets Request Method: POST Status Code: 201 CREATED Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"} Ruleset Update Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id Request Method: PATCH Status Code: 200 OK Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"} Ruleset deletion Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"Public Rulesets"},{"location":"rest-api/public_rulesets/#public-rulesets","text":"","title":"Public Rulesets"},{"location":"rest-api/public_rulesets/#resource-urls","text":"https://api.koodous.com/public_rulesets https://api.koodous.com/public_rulesets/:id","title":"Resource url/s"},{"location":"rest-api/public_rulesets/#object-details","text":"id Ruleset ID active Ruleset is active or not. created_on The date when ruleset was created on koodous. detections Total APK detections for this ruleset. modified_on The date when comment was modified. name Ruleset's name. privacy Ruleset's privacy (public or private). rules The ruleset content. send_notifications The ruleset will notify detections or not. social The ruleset is inside the Koodous detection system.","title":"Object details"},{"location":"rest-api/public_rulesets/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 60","title":"Resource information"},{"location":"rest-api/public_rulesets/#parameters","text":":sha256 sha256 lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/public_rulesets https://api.koodous.com/public_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on","title":"Parameters"},{"location":"rest-api/public_rulesets/#example-request","text":"https://api.koodous.com/public_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on","title":"Example request"},{"location":"rest-api/public_rulesets/#example-result","text":"{ \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 497, \"created_on\": 1431685981, \"modified_on\": 1431685981, \"name\": \"New Ruleset\", \"rules\": \"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\", \"active\": false, \"privacy\": \"public\", \"social\": false, \"deleted\": false, \"send_notifications\": true, \"detections\": 0, \"rating\": 0, } ] }","title":"Example result"},{"location":"rest-api/public_rulesets/#ruleset-creation","text":"Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets Request Method: POST Status Code: 201 CREATED Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"}","title":"Ruleset creation"},{"location":"rest-api/public_rulesets/#ruleset-update","text":"Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id Request Method: PATCH Status Code: 200 OK Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"}","title":"Ruleset Update"},{"location":"rest-api/public_rulesets/#ruleset-deletion","text":"Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"Ruleset deletion"},{"location":"rest-api/public_rulesets_comments/","text":"Public Rulesets Comments Method to list rulesets comments with pagination Resource url/s https://api.koodous.com/public_rulesets/:id/comments Object details id Comment ID author Analyst object ( analysts ) apk APK sha256 hash created_on The date when comment was created on koodous modified_on The date when comment was modified text The comment's content Resource information Response formats JSON Requires authentication Yes Requests per minute 100 Parameters :id Id lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/public_rulesets/123/comments https://api.koodous.com/public_rulesets/123/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D Example request https://api.koodous.com/public_rulesets/123/comments Example result { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 114, \"author\": { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", \"can_invite\": true }, \"ruleset\": 123, \"created_on\": 1429698724, \"modified_on\": 1429698724, \"text\": \"test\" } ] } Comment creation Comment creation can be done with the next request: Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id/comments Request Method: POST Status Code: 201 CREATED Payload should looks like following: {\"text\": \"test2\"} Comment deletion A comment can be delete if the authenticated user is the owner. The request should looks like following: Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id/comments/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"Public Rulesets Comments"},{"location":"rest-api/public_rulesets_comments/#public-rulesets-comments","text":"Method to list rulesets comments with pagination","title":"Public Rulesets Comments"},{"location":"rest-api/public_rulesets_comments/#resource-urls","text":"https://api.koodous.com/public_rulesets/:id/comments","title":"Resource url/s"},{"location":"rest-api/public_rulesets_comments/#object-details","text":"id Comment ID author Analyst object ( analysts ) apk APK sha256 hash created_on The date when comment was created on koodous modified_on The date when comment was modified text The comment's content","title":"Object details"},{"location":"rest-api/public_rulesets_comments/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 100","title":"Resource information"},{"location":"rest-api/public_rulesets_comments/#parameters","text":":id Id lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/public_rulesets/123/comments https://api.koodous.com/public_rulesets/123/comments?cursor=cD0yMDE1LTA3LTA4KzE0JTNBMTAlM0E1MyUyQjAwJTNBMDA%3D","title":"Parameters"},{"location":"rest-api/public_rulesets_comments/#example-request","text":"https://api.koodous.com/public_rulesets/123/comments","title":"Example request"},{"location":"rest-api/public_rulesets_comments/#example-result","text":"{ \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 114, \"author\": { \"username\": \"user1\", \"first_name\": \"Robert\", \"last_name\": \"Smith\", \"date_joined\": 1414423670, \"last_login\": 1429694015, \"total_public_rulesets\": 1, \"total_followers\": 3, \"total_following\": 6, \"total_comments\": 27, \"avatar_url\": \"/media/avatars/116585.jpg\", \"occupation\": \"Malware analyst\", \"bio\": \"Malware analyst\", \"twitter_user\": \"\", \"can_invite\": true }, \"ruleset\": 123, \"created_on\": 1429698724, \"modified_on\": 1429698724, \"text\": \"test\" } ] }","title":"Example result"},{"location":"rest-api/public_rulesets_comments/#comment-creation","text":"Comment creation can be done with the next request: Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id/comments Request Method: POST Status Code: 201 CREATED Payload should looks like following: {\"text\": \"test2\"}","title":"Comment creation"},{"location":"rest-api/public_rulesets_comments/#comment-deletion","text":"A comment can be delete if the authenticated user is the owner. The request should looks like following: Remote Address: koodous.com Request URL: https://api.koodous.com/public_rulesets/:id/comments/:id Request Method: DELETE Status Code: 204 NO CONTENT","title":"Comment deletion"},{"location":"rest-api/public_rulesets_votes/","text":"Public Rulesets Votes Method to list votes or vote a ruleset. Resource url/s https://api.koodous.com/public_rulesets/:id/votes Object details kind Positive or negative analyst Vote's username Resource information Response formats JSON Requires authentication Yes Requests per minute 100 Parameters :id id lookup ( Required ) { \"count\": 6, \"next\": null, \"previous\": null, \"results\": [ { \"kind\": \"positive\", \"analyst\": \"user1\" }, { \"kind\": \"positive\", \"analyst\": \"user2\" }, { \"kind\": \"positive\", \"analyst\": \"user3\" }, { \"kind\": \"positive\", \"analyst\": \"user4\" }, { \"kind\": \"positive\", \"analyst\": \"user5\" }, { \"kind\": \"negative\", \"analyst\": \"user6\" } ] } Creation Example request Remote Address:koodous.com Request URL:https://api.koodous.com/public_rulesets/:id/votes Request Method:POST Status Code:201 CREATED Payload options {kind: \"positive\"} {kind: \"negative\"}","title":"Public Rulesets Votes"},{"location":"rest-api/public_rulesets_votes/#public-rulesets-votes","text":"Method to list votes or vote a ruleset.","title":"Public Rulesets Votes"},{"location":"rest-api/public_rulesets_votes/#resource-urls","text":"https://api.koodous.com/public_rulesets/:id/votes","title":"Resource url/s"},{"location":"rest-api/public_rulesets_votes/#object-details","text":"kind Positive or negative analyst Vote's username","title":"Object details"},{"location":"rest-api/public_rulesets_votes/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 100","title":"Resource information"},{"location":"rest-api/public_rulesets_votes/#parameters","text":":id id lookup ( Required ) { \"count\": 6, \"next\": null, \"previous\": null, \"results\": [ { \"kind\": \"positive\", \"analyst\": \"user1\" }, { \"kind\": \"positive\", \"analyst\": \"user2\" }, { \"kind\": \"positive\", \"analyst\": \"user3\" }, { \"kind\": \"positive\", \"analyst\": \"user4\" }, { \"kind\": \"positive\", \"analyst\": \"user5\" }, { \"kind\": \"negative\", \"analyst\": \"user6\" } ] }","title":"Parameters"},{"location":"rest-api/public_rulesets_votes/#creation-example-request","text":"Remote Address:koodous.com Request URL:https://api.koodous.com/public_rulesets/:id/votes Request Method:POST Status Code:201 CREATED","title":"Creation Example request"},{"location":"rest-api/public_rulesets_votes/#payload-options","text":"{kind: \"positive\"} {kind: \"negative\"}","title":"Payload options"},{"location":"rest-api/user_rulesets/","text":"Rulesets Resource url/s https://api.koodous.com/user_rulesets https://api.koodous.com/user_rulesets/:id Object details id Ruleset ID active Ruleset is active or not. created_on The date when ruleset was created on koodous. detections Total APK detections for this ruleset. modified_on The date when comment was modified. name Ruleset's name. privacy Ruleset's privacy (public or private). rules The ruleset content. send_notifications The ruleset will notify detections or not. social The ruleset is inside the Koodous detection system. Resource information Response formats JSON Requires authentication Yes Requests per minute 60 Parameters :sha256 sha256 lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/user_rulesets https://api.koodous.com/user_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on Example request https://api.koodous.com/user_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on Example result { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 497, \"created_on\": 1431685981, \"modified_on\": 1431685981, \"name\": \"New Ruleset\", \"rules\": \"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\", \"active\": false, \"privacy\": \"public\", \"social\": false, \"deleted\": false, \"send_notifications\": true, \"detections\": 0, \"parent\": null } ] } Ruleset creation Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets Request Method:POST Status Code:201 CREATED Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"} Ruleset Update Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets/:id Request Method:PATCH Status Code:200 OK Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"} Ruleset deletion Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets/:id Request Method:DELETE Status Code:204 NO CONTENT","title":"Your Rulesets"},{"location":"rest-api/user_rulesets/#rulesets","text":"","title":"Rulesets"},{"location":"rest-api/user_rulesets/#resource-urls","text":"https://api.koodous.com/user_rulesets https://api.koodous.com/user_rulesets/:id","title":"Resource url/s"},{"location":"rest-api/user_rulesets/#object-details","text":"id Ruleset ID active Ruleset is active or not. created_on The date when ruleset was created on koodous. detections Total APK detections for this ruleset. modified_on The date when comment was modified. name Ruleset's name. privacy Ruleset's privacy (public or private). rules The ruleset content. send_notifications The ruleset will notify detections or not. social The ruleset is inside the Koodous detection system.","title":"Object details"},{"location":"rest-api/user_rulesets/#resource-information","text":"Response formats JSON Requires authentication Yes Requests per minute 60","title":"Resource information"},{"location":"rest-api/user_rulesets/#parameters","text":":sha256 sha256 lookup ( Required ) ?page Specify page of current results ?page_size A value of users votes Examples: https://api.koodous.com/user_rulesets https://api.koodous.com/user_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on","title":"Parameters"},{"location":"rest-api/user_rulesets/#example-request","text":"https://api.koodous.com/user_rulesets?page=1&page_size=10&active=True&privacy=public&ordering=-modified_on","title":"Example request"},{"location":"rest-api/user_rulesets/#example-result","text":"{ \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"id\": 497, \"created_on\": 1431685981, \"modified_on\": 1431685981, \"name\": \"New Ruleset\", \"rules\": \"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\", \"active\": false, \"privacy\": \"public\", \"social\": false, \"deleted\": false, \"send_notifications\": true, \"detections\": 0, \"parent\": null } ] }","title":"Example result"},{"location":"rest-api/user_rulesets/#ruleset-creation","text":"Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets Request Method:POST Status Code:201 CREATED Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"}","title":"Ruleset creation"},{"location":"rest-api/user_rulesets/#ruleset-update","text":"Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets/:id Request Method:PATCH Status Code:200 OK Payload example: {\"active\":true, name: \"New Ruleset\", rules: \"\"rule silent_banker : banker\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"This is just an example\\\"\\n\\t\\tthread_level = 3\\n\\t\\tin_the_wild = true\\n\\n\\tstrings:\\n\\t\\t$a = {6A 40 68 00 30 00 00 6A 14 8D 91}\\n\\t\\t$b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}\\n\\t\\t$c = \\\"UVODFRYSIHLNWPEJXQZAKCBGMT\\\"\\n\\n\\tcondition:\\n\\t\\t$a or $b or $c\\n}\"}","title":"Ruleset Update"},{"location":"rest-api/user_rulesets/#ruleset-deletion","text":"Remote Address:koodous.com Request URL:https://api.koodous.com/user_rulesets/:id Request Method:DELETE Status Code:204 NO CONTENT","title":"Ruleset deletion"},{"location":"web/apks/","text":"APKs","title":"APKs"},{"location":"web/apks/#apks","text":"","title":"APKs"},{"location":"web/community_rulesets/","text":"Community Rulesets","title":"Community Rulesets"},{"location":"web/community_rulesets/#community-rulesets","text":"","title":"Community Rulesets"},{"location":"web/dashboard/","text":"Dashboard","title":"Dashboard"},{"location":"web/dashboard/#dashboard","text":"","title":"Dashboard"},{"location":"web/getting-started/","text":"Koodous is a collaborative platform focused on the detection of fraudulent patterns in Android applications. Holy cow, it's full of apps We provide you literally millions of apks to download and analyze. The repository is constantly being updated with new packages from several sources, both official and unofficial. And here comes the best part: it's totally for free. Analyze using your rules We love Yara rules, and we thought you could find them useful too. You can write your own rulesets and launch them against any APK of your choice, or just sit back, relax and wait. Our analysis system will apply you rules to every fresh uploaded APK and alert you when a match shows up. Get social Once analyzed, the voting and comment systems in every package details screen let you share your findings about any APK with the rest of the community. Also, we introduce the social Yara rulesets. What if I like the rules that other analyst did? Don't worry, you won't have to do all that copy n' paste. Just follow him and automagically you will be warned when an APK gives a positive for his rules. Awesome, isn't it? Koodous' finest If the community find your rulesets useful you will accumulate followers and eventually get a high position in our ranking. If you receive such honor, you will be part of the chosen ones that stablish the reputation of the APKs for the mobile application. This means that your Yara rules will help people to be safe, as they will be warned if an app installed on their phones or tablets matches them. Or go solo In case you prefer not to be affected by social rulesets in your mobile device, you can link your phone or tablet with your account using our QR Code method. And voil\u00e1! APKs in your device will only be analysed using your own rulesets.","title":"Getting started"},{"location":"web/getting-started/#holy-cow-its-full-of-apps","text":"We provide you literally millions of apks to download and analyze. The repository is constantly being updated with new packages from several sources, both official and unofficial. And here comes the best part: it's totally for free.","title":"Holy cow, it's full of apps"},{"location":"web/getting-started/#analyze-using-your-rules","text":"We love Yara rules, and we thought you could find them useful too. You can write your own rulesets and launch them against any APK of your choice, or just sit back, relax and wait. Our analysis system will apply you rules to every fresh uploaded APK and alert you when a match shows up.","title":"Analyze using your rules"},{"location":"web/getting-started/#get-social","text":"Once analyzed, the voting and comment systems in every package details screen let you share your findings about any APK with the rest of the community. Also, we introduce the social Yara rulesets. What if I like the rules that other analyst did? Don't worry, you won't have to do all that copy n' paste. Just follow him and automagically you will be warned when an APK gives a positive for his rules. Awesome, isn't it?","title":"Get social"},{"location":"web/getting-started/#koodous-finest","text":"If the community find your rulesets useful you will accumulate followers and eventually get a high position in our ranking. If you receive such honor, you will be part of the chosen ones that stablish the reputation of the APKs for the mobile application. This means that your Yara rules will help people to be safe, as they will be warned if an app installed on their phones or tablets matches them.","title":"Koodous' finest"},{"location":"web/getting-started/#or-go-solo","text":"In case you prefer not to be affected by social rulesets in your mobile device, you can link your phone or tablet with your account using our QR Code method. And voil\u00e1! APKs in your device will only be analysed using your own rulesets.","title":"Or go solo"},{"location":"web/notifications/","text":"Notifications","title":"Notifications"},{"location":"web/notifications/#notifications","text":"","title":"Notifications"},{"location":"web/rulesets/","text":"Yara rules are a great tool to make a static analysis over a sample. Searching In the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match: Partial match fields App name Package ** Developer Exact match fields SHA256 SHA1 ** MD5 If you search for a partial hash, like 0bb9246deae4d3210e06791e9999c45 (notice the last figure is left), the search engine will look in any partial match field, probably giving you no results at all. At the moment, there is no way to tell the search engine what you are looking for. So, if you search a string (i.e. Rockstar), applications, packages and developers containing that string will be shown. The detailed view Entering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it. The comment system is pretty starightforward: write your findings or opinions and click Send. Just remember to be respectful with the rest of the community, do constructive critics and follow a little netiquette. The up and down arrows on the right of the application image allows you to vote whether that specific application is trustworthy or not. Please notice this is not about how you like an application, but about how safe you think it is. You can download and send an analysis request using the button above the app image. The General info tab shows a brief summary of the most identificative information. Depending on the app, another Metadata tab will also appear showing a more complete report with information from Google Play, such as ratings and categories in JSON format. Finally, if the APK has been analyzed, another analysis tab will show the report, also in JSON format.","title":"Rulesets"},{"location":"web/rulesets/#searching","text":"In the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match: Partial match fields App name Package ** Developer Exact match fields SHA256 SHA1 ** MD5 If you search for a partial hash, like 0bb9246deae4d3210e06791e9999c45 (notice the last figure is left), the search engine will look in any partial match field, probably giving you no results at all. At the moment, there is no way to tell the search engine what you are looking for. So, if you search a string (i.e. Rockstar), applications, packages and developers containing that string will be shown.","title":"Searching"},{"location":"web/rulesets/#the-detailed-view","text":"Entering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it. The comment system is pretty starightforward: write your findings or opinions and click Send. Just remember to be respectful with the rest of the community, do constructive critics and follow a little netiquette. The up and down arrows on the right of the application image allows you to vote whether that specific application is trustworthy or not. Please notice this is not about how you like an application, but about how safe you think it is. You can download and send an analysis request using the button above the app image. The General info tab shows a brief summary of the most identificative information. Depending on the app, another Metadata tab will also appear showing a more complete report with information from Google Play, such as ratings and categories in JSON format. Finally, if the APK has been analyzed, another analysis tab will show the report, also in JSON format.","title":"The detailed view"},{"location":"web/the-repo/","text":"The repository screen of Koodous allows you to search through millions of packages any particular application. Once you have found your \"target\", you can access the detailed view, where you can vote, comment, download it and ask for an on-demand analysis. Searching In the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match: Regular text search You have the possibility to look for apks introducing text with no command at all. The entered text will be compared to the following fields: App name Developer Package Hash (md5, sha1, sha256) From here you can use some little commands to exclude or add some options to your search. Check out the following examples: 66038ee31eea9fa77cb657299edcca9f66b9ba26af0c9eb514aff39abfd2b68c Looks for the introduced hash Whatsapp Looks for Whatsapp Whatsap* Looks for strings that start with Whatsap Whatsapp -com.whatsapp Looks for Whatsapp* excluding com.whatsapp** Whatsapp~1 -com.whatsapp Looks for Whatsapp and similars words (like typos) excluding com.whatsapp . The number 1 can get higher for a softer comparison. \"Whatsapp Plus\" Looks for apps with that two words in that order Whatsapp AND Facebook Looks for apps that contains both both words ( AND can be removed as is the default command) Whatsapp OR Facebook Looks for apps that contains Whatsapp or Facebook (Whatsapp OR Facebook) -(com.principal OR com.whatsapp) You can group conditions and excluding them too Advanced search We provide an advanced search to ease the search of malware or interesting samples. You can either filter by tags, filesize, user's rating, ... For instance, if we can find applications with a rating less than -1 and from GooglePlay, you can use rating:<=-1 tags:googleplay . This is useful to detect applications rated by users that maybe are not detected by any ruleset. Another interesting search can be: package_name:\"com.whatsapp\" -developer:\"WhatsApp Inc.\" The following table describes each search modifier available, you can combine these as you can with the previous examples on regular text search section. Attribute Modificator Description Rating rating: This modificator is used to obtain application with certain users rating. You can get applications with score greater or equal than 2 with rating:>2 . Or more interesting, with score equal or less than -1 rating:>=-1 Developer developer: (or company:) The developer of each application is extracted from the certificate, and you can search by these using this modificator. For instance: developer:\"WhatsApp Inc.\" Package Name package_name: Each application must have an unique package name, and each update must have the same name. Example: package_name:com.whatsapp App Name appname: (or app:) The name of the application, for instance: appname:WhatsApp Filesize (in bytes) size: The filesize of the APK file is, in many times, an indicator of their purpose. You can filter by this parameter with, for instance, for files greater or equal than 1MB: size:>1000000 , or less than 700KB: size:<700000 . Last but not least, you can use ranges (from 700kb to 1MB) size:[700000 TO 1000000] Tag tags: (or tag:) We tag the samples with interesting word and each user can set by one or more tag to any sample, and you can find for this. For example, finding sample that we know come from Google Play: tags:googleplay or that any user has tagged as banker tags:banker Submission date date: (or created_on:) The date when each APK was submitted is indexed and you can filter by that. For instance: date:<2015-06-16 for samples previous to this date and date:>2015-06-16 for samples submitted after this date. Here, ranges can be used too date:[2015-06-16 TO 2015-06-17] Certificate certificate: (or cert:) Each application (as well the well-formed) has signed by a certificate. We have each certificate indexed and you can find by that, concretly by its sha1 . For instance, we know that official Twitter application has 40F3166BB567D3144BCA7DA466BB948B782270EA as sha1 certificate, then, we can found all versions of the official Twitter application with this: cert:40F3166BB567D3144BCA7DA466BB948B782270EA or certificate:40F3166BB567D3144BCA7DA466BB948B782270EA if you want to write a bit more :). Installed on devices installed: (or on_devices:) This search modifier has no parameters. It search only APKs that are installed or sometime was installed in some device. Example: installed:true or installed:false Detected by community detected: This search modifier has no parameters. It search only APKs that has been detected by Koodous community. Example: detected:true or detected:false Hardcoded urls url: (or urls:) Looks for urls inside APK with partial or full search. Example: url:google.com or url:\"https://play.google.com/store\" Network hosts network.hosts: Looks for hosts of connections made from the app. Example: network.hosts:8.8.8.8 Network http network.http: Looks for http uris of connections made from the app (full or partial search). Example: network.http:\"com:80\" Network DNS network.dns: Looks for dns resolutions made from the app (full or partial search). Example: network.dns:\"google.com\" Network domains network.domains: Like dns (full or partial search). Example: network.domains:\"google.com\" The detailed view Entering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it. The comment system is placed on a tab and is pretty straight-forward: write your findings or opinions and click Send. Just remember to be respectful with the rest of the community, do constructive critics and follow the standard netiquette. The up and down arrows on the right of the application image allows you to vote if that specific application is trustworthy or not. Please notice this is not about how you like an application, but about how safe you think it is. Many APKs contain the tag. This just means that we haven't been able to detect a .dex file, resources file or a certificate. Many service APPs installed on devices don't have a certificate by default. Because of this, we consider that it's corrupted. You can download and send an analysis request using the specific buttons above the app image. Info tabs The General info tab shows a brief summary of the most identificative information. Depending on the app, another Metadata tab will appear showing a more complete report with information from Google Play, such as ratings and categories. If the APK has been analyzed, another Analysis tab will show the report, also in json format.","title":"The repository"},{"location":"web/the-repo/#searching","text":"In the repository screen you can search for any APK in the system. Depending of the fields, the search will return APKs with an exact or partial match:","title":"Searching"},{"location":"web/the-repo/#regular-text-search","text":"You have the possibility to look for apks introducing text with no command at all. The entered text will be compared to the following fields: App name Developer Package Hash (md5, sha1, sha256) From here you can use some little commands to exclude or add some options to your search. Check out the following examples: 66038ee31eea9fa77cb657299edcca9f66b9ba26af0c9eb514aff39abfd2b68c Looks for the introduced hash Whatsapp Looks for Whatsapp Whatsap* Looks for strings that start with Whatsap Whatsapp -com.whatsapp Looks for Whatsapp* excluding com.whatsapp** Whatsapp~1 -com.whatsapp Looks for Whatsapp and similars words (like typos) excluding com.whatsapp . The number 1 can get higher for a softer comparison. \"Whatsapp Plus\" Looks for apps with that two words in that order Whatsapp AND Facebook Looks for apps that contains both both words ( AND can be removed as is the default command) Whatsapp OR Facebook Looks for apps that contains Whatsapp or Facebook (Whatsapp OR Facebook) -(com.principal OR com.whatsapp) You can group conditions and excluding them too","title":"Regular text search"},{"location":"web/the-repo/#advanced-search","text":"We provide an advanced search to ease the search of malware or interesting samples. You can either filter by tags, filesize, user's rating, ... For instance, if we can find applications with a rating less than -1 and from GooglePlay, you can use rating:<=-1 tags:googleplay . This is useful to detect applications rated by users that maybe are not detected by any ruleset. Another interesting search can be: package_name:\"com.whatsapp\" -developer:\"WhatsApp Inc.\" The following table describes each search modifier available, you can combine these as you can with the previous examples on regular text search section. Attribute Modificator Description Rating rating: This modificator is used to obtain application with certain users rating. You can get applications with score greater or equal than 2 with rating:>2 . Or more interesting, with score equal or less than -1 rating:>=-1 Developer developer: (or company:) The developer of each application is extracted from the certificate, and you can search by these using this modificator. For instance: developer:\"WhatsApp Inc.\" Package Name package_name: Each application must have an unique package name, and each update must have the same name. Example: package_name:com.whatsapp App Name appname: (or app:) The name of the application, for instance: appname:WhatsApp Filesize (in bytes) size: The filesize of the APK file is, in many times, an indicator of their purpose. You can filter by this parameter with, for instance, for files greater or equal than 1MB: size:>1000000 , or less than 700KB: size:<700000 . Last but not least, you can use ranges (from 700kb to 1MB) size:[700000 TO 1000000] Tag tags: (or tag:) We tag the samples with interesting word and each user can set by one or more tag to any sample, and you can find for this. For example, finding sample that we know come from Google Play: tags:googleplay or that any user has tagged as banker tags:banker Submission date date: (or created_on:) The date when each APK was submitted is indexed and you can filter by that. For instance: date:<2015-06-16 for samples previous to this date and date:>2015-06-16 for samples submitted after this date. Here, ranges can be used too date:[2015-06-16 TO 2015-06-17] Certificate certificate: (or cert:) Each application (as well the well-formed) has signed by a certificate. We have each certificate indexed and you can find by that, concretly by its sha1 . For instance, we know that official Twitter application has 40F3166BB567D3144BCA7DA466BB948B782270EA as sha1 certificate, then, we can found all versions of the official Twitter application with this: cert:40F3166BB567D3144BCA7DA466BB948B782270EA or certificate:40F3166BB567D3144BCA7DA466BB948B782270EA if you want to write a bit more :). Installed on devices installed: (or on_devices:) This search modifier has no parameters. It search only APKs that are installed or sometime was installed in some device. Example: installed:true or installed:false Detected by community detected: This search modifier has no parameters. It search only APKs that has been detected by Koodous community. Example: detected:true or detected:false Hardcoded urls url: (or urls:) Looks for urls inside APK with partial or full search. Example: url:google.com or url:\"https://play.google.com/store\" Network hosts network.hosts: Looks for hosts of connections made from the app. Example: network.hosts:8.8.8.8 Network http network.http: Looks for http uris of connections made from the app (full or partial search). Example: network.http:\"com:80\" Network DNS network.dns: Looks for dns resolutions made from the app (full or partial search). Example: network.dns:\"google.com\" Network domains network.domains: Like dns (full or partial search). Example: network.domains:\"google.com\"","title":"Advanced search"},{"location":"web/the-repo/#the-detailed-view","text":"Entering on the detailed view of an APK is as easy as clicking over its name or SHA256 hash. Once inside, it is possible to see more information, vote it, write comments, request an analysis or download it. The comment system is placed on a tab and is pretty straight-forward: write your findings or opinions and click Send. Just remember to be respectful with the rest of the community, do constructive critics and follow the standard netiquette. The up and down arrows on the right of the application image allows you to vote if that specific application is trustworthy or not. Please notice this is not about how you like an application, but about how safe you think it is. Many APKs contain the tag. This just means that we haven't been able to detect a .dex file, resources file or a certificate. Many service APPs installed on devices don't have a certificate by default. Because of this, we consider that it's corrupted. You can download and send an analysis request using the specific buttons above the app image.","title":"The detailed view"},{"location":"web/the-repo/#info-tabs","text":"The General info tab shows a brief summary of the most identificative information. Depending on the app, another Metadata tab will appear showing a more complete report with information from Google Play, such as ratings and categories. If the APK has been analyzed, another Analysis tab will show the report, also in json format.","title":"Info tabs"},{"location":"web/your_rulesets/","text":"Your Rulesets","title":"Your Rulesets"},{"location":"web/your_rulesets/#your-rulesets","text":"","title":"Your Rulesets"},{"location":"yara/androguard/","text":"Introduction Androguard is a tool to make a static analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the static analysis. Firstly, you need to import the module with the next directive at the header of the ruleset. import \"androguard\" Package name Each Android application has a package name that needs to be unique once the application is installed in the mobile phone, but in the wild, we find several applications with the same (or similar) package name. To find this kind of applications, we can use the next condition (we use a complete rule for explain the behaviour): androguard.package_name(regex) And match with a string too... androguard.package_name(string) rule videogames { meta: description = \"Rule to catch APKs with package name match with videogame\" condition: androguard.package_name(/videogame/) } You can add more restrictions to this rule, like strings, other functions of this module or conditions of another module. APP name The app name displayed when you install an application in a device could be an indicator of an \"anomaly\". For this reason, we have an condition to catch these applications. You can match with a regex or with a string. androguard.app_name(regex) androguard.app_name(string) rule videogames { meta: description = \"Rule to catch APKs with app name match with cars\" condition: androguard.app_name(/cars/) } Activities The activities is an esential part of the Android applications. They define the \"screens\" of an application and its logic, so, with the name of that, you can filter some applications. In the next example, we are going to filter applications which the name one of its activity is sms, with a point after and before of that word. It accepts two formats, with string and with regular expressions: androguard.activity(string) androguard.activity(regex) And you must use in the conditions section: rule sendSMS { condition: androguard.activity(/\\.sms\\./) or androguard.activity(\"com.package.name.sendSMS\") } Of course, this filter does not indicate that the application send SMSs, but maybe receive or use an screen to send some type of SMS. Receivers To find applications with certain receivers you could use this to match: androguard.receiver(string) androguard.receiver(regex) And in a rule, inside condition: rule sendSMS { condition: androguard.receiver(\"com.airpush.android.DeliveryReceiver\") or androguard.receiver(/smsreceiver/i) } Permissions In order to detect some applications that requires a special or desired permissions, you can use this condition. It find in all permissions of the application and if one of this match with the regular expression, it generates a notification. The format is the next: androguard.permission(regex) And you must use in the conditions section: rule videogames { condition: androguard.permission(/RESTART_PACKAGES/) } Permissions number Some applications with a huge number of permissions could be malware and this variable could help you to detect them. rule videogames { condition: androguard.permissions_number > 5 } Services The service or services of an application are use to run tasks in background. Many times, the malware uses this to downloads configuration files, to send stolen data or another thing, ever in background. In order to detect the applications that use an special or desired service name, you can use this condition. It searches through all services of the application and if one of them matches with the regular expression or an exact string a notification will be generated. androguard.service(regex) androguard.service(string) And you must use in the conditions section: rule videogames { condition: androguard.service(\"com.example.SendData\") or androguard.service(/receivetoken/) } Filters Filters of an application are used to detect broadcasts of itself or other apps. androguard.filter(regex) androguard.filter(string) And you must use in the conditions section: rule videogames { condition: androguard.filter(\"android.provider.Telephony.SMS_DELIVER\")or androguard.filter(/PACKAGE_ADDED/) } Certificate In our website, one of the details of each APK is the \"Developer\". If you are a malware analyst, you must know that this field is not easy to know, so we use the APK' certificate to extract it. If you encounter a series of APKs with the same Developer, you can create a Yara rule to know more of them. SHA1 Each certificate has an SHA1 as a part of its signature, and you can match with it! Some malware developers use the same certificate for many samples, and with this condition you can detect them: androguard.certificate.sha1(string) Remember that you need to match with the complete sha1, not with a part or regex of it. Example: rule videogames: adware { condition: androguard.certificate.sha1(\"5C88CB801C4FB3D609B57DCD7CAFC25B35E03AC2\") or androguard.certificate.sha1(\"9E:E0:B6:FD:D1:DC:0A:2B:0C:6B:22:EB:C9:38:4C:A0:DD:05:12:D5\") /* Note that accepts two syntax, with and without colons */ } Issuer The issuer of a certificate is the person (or entity) that generate the certificate. With the next condition you can match with it: androguard.certificate.issuer(regex) Subject The subject of a certificate is the owner of its. To match with this field, you can use: androguard.certificate.subject(regex) NOTE: Normally, Issuer and Subject in an APK' certificates are the same, but this is not a norm. URL We perform an static analysis over the APK extracting the hardcored URLs . You can do a rule to match with that (using a regex or a string). androguard.url(regex) androguard.url(string) rule videogames: adware { condition: androguard.url(/adurl\\.com/) or androguard.url(\"google.com\") } NOTE : Remember that if you want to find a point (.) with a regex, you need to escape it with reverse slash. If you don't do that, it can match with any character. SDK versions The AndroidManifest.xml file contains the versions minimum, maximum and target that the application requires, specified with the API number. The API list is the next: Code name Version API level Lollipop 5.0 API level 21 KitKat 4.4 - 4.4.4 API level 19 Jelly Bean 4.3.x API level 18 Jelly Bean 4.2.x API level 17 Jelly Bean 4.1.x API level 16 Ice Cream Sandwich 4.0.3 - 4.0.4 API level 15 Ice Cream Sandwich 4.0.1 - 4.0.2 API level 14 Honeycomb 3.2.x API level 13 Honeycomb 3.1 API level 12 Honeycomb 3.0 API level 11 Gingerbread 2.3.3 - 2.3.7 API level 10 Gingerbread 2.3 - 2.3.2 API level 9 Froyo 2.2.x API level 8 Eclair 2.1 API level 7 Eclair 2.0.1 API level 6 Eclair 2.0 API level 5 Donut 1.6 API level 4 Cupcake 1.5 API level 3 (no code name) 1.1 API level 2 (no code name) 1.0 API level 1 You can see an updated version of this table in its source: https://source.android.com/source/build-numbers.html Min SDK Minimum SDK version specifies that, the minimum version of Android require to execute the application. You can filter that using: rule videogames: adware { condition: androguard.min_sdk == 10 or androguard.min_sdk > 10 or androguard.min_sdk <= 20 //It's only an example, don't bother! } Max SDK Maximum SDK specifies the higger version of Android that could run this application: rule videogames: adware { condition: androguard.max_sdk == 18 or androguard.max_sdk > 18 or androguard.max_sdk >= 19 } Target SDK The target version, theorically, specifies in which Android version the application was tested and worked fine. rule videogames: adware { condition: androguard.target_sdk == 14 or androguard.target_sdk > 14 or androguard.target_sdk >= 15 }","title":"Androguard"},{"location":"yara/androguard/#introduction","text":"Androguard is a tool to make a static analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the static analysis. Firstly, you need to import the module with the next directive at the header of the ruleset. import \"androguard\"","title":"Introduction"},{"location":"yara/androguard/#package-name","text":"Each Android application has a package name that needs to be unique once the application is installed in the mobile phone, but in the wild, we find several applications with the same (or similar) package name. To find this kind of applications, we can use the next condition (we use a complete rule for explain the behaviour): androguard.package_name(regex) And match with a string too... androguard.package_name(string) rule videogames { meta: description = \"Rule to catch APKs with package name match with videogame\" condition: androguard.package_name(/videogame/) } You can add more restrictions to this rule, like strings, other functions of this module or conditions of another module.","title":"Package name"},{"location":"yara/androguard/#app-name","text":"The app name displayed when you install an application in a device could be an indicator of an \"anomaly\". For this reason, we have an condition to catch these applications. You can match with a regex or with a string. androguard.app_name(regex) androguard.app_name(string) rule videogames { meta: description = \"Rule to catch APKs with app name match with cars\" condition: androguard.app_name(/cars/) }","title":"APP name"},{"location":"yara/androguard/#activities","text":"The activities is an esential part of the Android applications. They define the \"screens\" of an application and its logic, so, with the name of that, you can filter some applications. In the next example, we are going to filter applications which the name one of its activity is sms, with a point after and before of that word. It accepts two formats, with string and with regular expressions: androguard.activity(string) androguard.activity(regex) And you must use in the conditions section: rule sendSMS { condition: androguard.activity(/\\.sms\\./) or androguard.activity(\"com.package.name.sendSMS\") } Of course, this filter does not indicate that the application send SMSs, but maybe receive or use an screen to send some type of SMS.","title":"Activities"},{"location":"yara/androguard/#receivers","text":"To find applications with certain receivers you could use this to match: androguard.receiver(string) androguard.receiver(regex) And in a rule, inside condition: rule sendSMS { condition: androguard.receiver(\"com.airpush.android.DeliveryReceiver\") or androguard.receiver(/smsreceiver/i) }","title":"Receivers"},{"location":"yara/androguard/#permissions","text":"In order to detect some applications that requires a special or desired permissions, you can use this condition. It find in all permissions of the application and if one of this match with the regular expression, it generates a notification. The format is the next: androguard.permission(regex) And you must use in the conditions section: rule videogames { condition: androguard.permission(/RESTART_PACKAGES/) }","title":"Permissions"},{"location":"yara/androguard/#permissions-number","text":"Some applications with a huge number of permissions could be malware and this variable could help you to detect them. rule videogames { condition: androguard.permissions_number > 5 }","title":"Permissions number"},{"location":"yara/androguard/#services","text":"The service or services of an application are use to run tasks in background. Many times, the malware uses this to downloads configuration files, to send stolen data or another thing, ever in background. In order to detect the applications that use an special or desired service name, you can use this condition. It searches through all services of the application and if one of them matches with the regular expression or an exact string a notification will be generated. androguard.service(regex) androguard.service(string) And you must use in the conditions section: rule videogames { condition: androguard.service(\"com.example.SendData\") or androguard.service(/receivetoken/) }","title":"Services"},{"location":"yara/androguard/#filters","text":"Filters of an application are used to detect broadcasts of itself or other apps. androguard.filter(regex) androguard.filter(string) And you must use in the conditions section: rule videogames { condition: androguard.filter(\"android.provider.Telephony.SMS_DELIVER\")or androguard.filter(/PACKAGE_ADDED/) }","title":"Filters"},{"location":"yara/androguard/#certificate","text":"In our website, one of the details of each APK is the \"Developer\". If you are a malware analyst, you must know that this field is not easy to know, so we use the APK' certificate to extract it. If you encounter a series of APKs with the same Developer, you can create a Yara rule to know more of them.","title":"Certificate"},{"location":"yara/androguard/#sha1","text":"Each certificate has an SHA1 as a part of its signature, and you can match with it! Some malware developers use the same certificate for many samples, and with this condition you can detect them: androguard.certificate.sha1(string) Remember that you need to match with the complete sha1, not with a part or regex of it. Example: rule videogames: adware { condition: androguard.certificate.sha1(\"5C88CB801C4FB3D609B57DCD7CAFC25B35E03AC2\") or androguard.certificate.sha1(\"9E:E0:B6:FD:D1:DC:0A:2B:0C:6B:22:EB:C9:38:4C:A0:DD:05:12:D5\") /* Note that accepts two syntax, with and without colons */ }","title":"SHA1"},{"location":"yara/androguard/#issuer","text":"The issuer of a certificate is the person (or entity) that generate the certificate. With the next condition you can match with it: androguard.certificate.issuer(regex)","title":"Issuer"},{"location":"yara/androguard/#subject","text":"The subject of a certificate is the owner of its. To match with this field, you can use: androguard.certificate.subject(regex) NOTE: Normally, Issuer and Subject in an APK' certificates are the same, but this is not a norm.","title":"Subject"},{"location":"yara/androguard/#url","text":"We perform an static analysis over the APK extracting the hardcored URLs . You can do a rule to match with that (using a regex or a string). androguard.url(regex) androguard.url(string) rule videogames: adware { condition: androguard.url(/adurl\\.com/) or androguard.url(\"google.com\") } NOTE : Remember that if you want to find a point (.) with a regex, you need to escape it with reverse slash. If you don't do that, it can match with any character.","title":"URL"},{"location":"yara/androguard/#sdk-versions","text":"The AndroidManifest.xml file contains the versions minimum, maximum and target that the application requires, specified with the API number. The API list is the next: Code name Version API level Lollipop 5.0 API level 21 KitKat 4.4 - 4.4.4 API level 19 Jelly Bean 4.3.x API level 18 Jelly Bean 4.2.x API level 17 Jelly Bean 4.1.x API level 16 Ice Cream Sandwich 4.0.3 - 4.0.4 API level 15 Ice Cream Sandwich 4.0.1 - 4.0.2 API level 14 Honeycomb 3.2.x API level 13 Honeycomb 3.1 API level 12 Honeycomb 3.0 API level 11 Gingerbread 2.3.3 - 2.3.7 API level 10 Gingerbread 2.3 - 2.3.2 API level 9 Froyo 2.2.x API level 8 Eclair 2.1 API level 7 Eclair 2.0.1 API level 6 Eclair 2.0 API level 5 Donut 1.6 API level 4 Cupcake 1.5 API level 3 (no code name) 1.1 API level 2 (no code name) 1.0 API level 1 You can see an updated version of this table in its source: https://source.android.com/source/build-numbers.html","title":"SDK versions"},{"location":"yara/androguard/#min-sdk","text":"Minimum SDK version specifies that, the minimum version of Android require to execute the application. You can filter that using: rule videogames: adware { condition: androguard.min_sdk == 10 or androguard.min_sdk > 10 or androguard.min_sdk <= 20 //It's only an example, don't bother! }","title":"Min SDK"},{"location":"yara/androguard/#max-sdk","text":"Maximum SDK specifies the higger version of Android that could run this application: rule videogames: adware { condition: androguard.max_sdk == 18 or androguard.max_sdk > 18 or androguard.max_sdk >= 19 }","title":"Max SDK"},{"location":"yara/androguard/#target-sdk","text":"The target version, theorically, specifies in which Android version the application was tested and worked fine. rule videogames: adware { condition: androguard.target_sdk == 14 or androguard.target_sdk > 14 or androguard.target_sdk >= 15 }","title":"Target SDK"},{"location":"yara/droidbox/","text":"Introduction Droidbox is a tool to perform dynamic analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the dynamic analysis. First of all, you need to import the module with the next directive at the header of the ruleset. import \"droidbox\" Send SMS If during the dynamic analysis the application send any SMS we register that. For instance, a tipical Android trojan after the installation and execution, it downloads a list of premium numbers and then sends one SMS to each one. You can view this in the Droidbox report, under the Analysis report tab of the application (SMS). In order to detect this behaviour with Yara, we have created the next functionality: //Remind to import the droidbox module!! rule videogames { condition: droidbox.sendsms(/./) //With that we detect if the APP send an SMS to any destination. } Or maybe, you want to look for some specific destination: droidbox.sendsms(\"1234\") or part of it: droidbox.sendsms(/23/) Phone calls Some times the applications make calls (in background or showing to the user, shamelessly!), you can detect these applications with this simple condition: rule videogames { condition: droidbox.phonecall(/./) //With that we detect if the APP call to any destination. } Or an specific destination: droidbox.phonecall(\"123456789\") Libraries The applications uses libraries to several purposes, good or bad, but in any case with this directive you can catch them: rule dexprotector { condition: droidbox.library(\"/data/data/ar.music.video.player/app_outdex/libdexprotectorasfe90.so\") //With that we detect if the APP call to a specific library. } But there is a better way, in case you don't know the package name or the complete name of the library loaded: // Remember scape dots! droidbox.library(/libdexprotectorasfe90\\.so/) Written files Droidbox also detect written and read files by the applications, and you can detect them by filename (written or read) or by content: droidbox.written.filename(\"/data/data/ar.music.video.player/app_outdex/libdexprotectorasfe90.so\") // By complete string droidbox.written.filename(/libdexprotector/) // By regex, more powerful Also, the data written. If it is binary data, we will represent as hexbytes, but if it's a text, you can use ascii directly.: droidbox.written.data(/6465780a303335/) // Write the header of a dex file //If you prefer write hex data in uppercase, you must use the insensitive case flag: droidbox.written.data(/6465780A303335/i) Or if you are looking for a specific text: droidbox.written.data(\"ID: 645r327673gfngnc\") Read files Like this module working with written files, it works with read files and its data: // For filenames: droidbox.read.filename(\"/proc/meminfo\") droidbox.read.filename(/meminfo/) // For data: droidbox.read.data(/6465780A303335/i) // Read the header of a dex file (not load, only read) droidbox.read.data(\"ID: 645r327673gfngnc\")","title":"Droidbox"},{"location":"yara/droidbox/#introduction","text":"Droidbox is a tool to perform dynamic analysis of Android applications. With this module developed to be used with Yara, you can match applications by several criteria based on the dynamic analysis. First of all, you need to import the module with the next directive at the header of the ruleset. import \"droidbox\"","title":"Introduction"},{"location":"yara/droidbox/#send-sms","text":"If during the dynamic analysis the application send any SMS we register that. For instance, a tipical Android trojan after the installation and execution, it downloads a list of premium numbers and then sends one SMS to each one. You can view this in the Droidbox report, under the Analysis report tab of the application (SMS). In order to detect this behaviour with Yara, we have created the next functionality: //Remind to import the droidbox module!! rule videogames { condition: droidbox.sendsms(/./) //With that we detect if the APP send an SMS to any destination. } Or maybe, you want to look for some specific destination: droidbox.sendsms(\"1234\") or part of it: droidbox.sendsms(/23/)","title":"Send SMS"},{"location":"yara/droidbox/#phone-calls","text":"Some times the applications make calls (in background or showing to the user, shamelessly!), you can detect these applications with this simple condition: rule videogames { condition: droidbox.phonecall(/./) //With that we detect if the APP call to any destination. } Or an specific destination: droidbox.phonecall(\"123456789\")","title":"Phone calls"},{"location":"yara/droidbox/#libraries","text":"The applications uses libraries to several purposes, good or bad, but in any case with this directive you can catch them: rule dexprotector { condition: droidbox.library(\"/data/data/ar.music.video.player/app_outdex/libdexprotectorasfe90.so\") //With that we detect if the APP call to a specific library. } But there is a better way, in case you don't know the package name or the complete name of the library loaded: // Remember scape dots! droidbox.library(/libdexprotectorasfe90\\.so/)","title":"Libraries"},{"location":"yara/droidbox/#written-files","text":"Droidbox also detect written and read files by the applications, and you can detect them by filename (written or read) or by content: droidbox.written.filename(\"/data/data/ar.music.video.player/app_outdex/libdexprotectorasfe90.so\") // By complete string droidbox.written.filename(/libdexprotector/) // By regex, more powerful Also, the data written. If it is binary data, we will represent as hexbytes, but if it's a text, you can use ascii directly.: droidbox.written.data(/6465780a303335/) // Write the header of a dex file //If you prefer write hex data in uppercase, you must use the insensitive case flag: droidbox.written.data(/6465780A303335/i) Or if you are looking for a specific text: droidbox.written.data(\"ID: 645r327673gfngnc\")","title":"Written files"},{"location":"yara/droidbox/#read-files","text":"Like this module working with written files, it works with read files and its data: // For filenames: droidbox.read.filename(\"/proc/meminfo\") droidbox.read.filename(/meminfo/) // For data: droidbox.read.data(/6465780A303335/i) // Read the header of a dex file (not load, only read) droidbox.read.data(\"ID: 645r327673gfngnc\")","title":"Read files"},{"location":"yara/file/","text":"Introduction Sometimes we need to match applications with a certain hash. For that purpose we have created this module. First of all, you need to import the module with the next directive at the header of the ruleset. import \"file\" MD5 For matching with the application (or applications if there are collisions! ;)) with certain MD5 hash: file.md5(string) rule my_apk: koodous { condition: file.md5(\"d367fd26b52353c2cce72af2435bd0d5\") } SHA1 For matching with the application with this SHA1 hash: file.sha1(string) rule my_apk: koodous { condition: file.sha1(\"2031eab6020aab492d31d7b4af3e1758ea1a3e00\") } SHA256 To match with the application with a certain SHA256 hash. This is the recommended hash if you want to find or create a whitelist. In the moment of writing these docs, sha256 is still \"alive\". :) file.sha256(string) rule my_apk: koodous { condition: file.sha256(\"3350990c4d298cdb4dc94ba886a27147e501bbf8fd504d824be53cad5cb02142\") }","title":"File"},{"location":"yara/file/#introduction","text":"Sometimes we need to match applications with a certain hash. For that purpose we have created this module. First of all, you need to import the module with the next directive at the header of the ruleset. import \"file\"","title":"Introduction"},{"location":"yara/file/#md5","text":"For matching with the application (or applications if there are collisions! ;)) with certain MD5 hash: file.md5(string) rule my_apk: koodous { condition: file.md5(\"d367fd26b52353c2cce72af2435bd0d5\") }","title":"MD5"},{"location":"yara/file/#sha1","text":"For matching with the application with this SHA1 hash: file.sha1(string) rule my_apk: koodous { condition: file.sha1(\"2031eab6020aab492d31d7b4af3e1758ea1a3e00\") }","title":"SHA1"},{"location":"yara/file/#sha256","text":"To match with the application with a certain SHA256 hash. This is the recommended hash if you want to find or create a whitelist. In the moment of writing these docs, sha256 is still \"alive\". :) file.sha256(string) rule my_apk: koodous { condition: file.sha256(\"3350990c4d298cdb4dc94ba886a27147e501bbf8fd504d824be53cad5cb02142\") }","title":"SHA256"},{"location":"yara/getting-started/","text":"Getting started The Yara tool aims to help detection of any kind of malware, but in this case, Android Malware Applications. With Yara rules you can create a \"description\" of malware families to detect new samples. Our implementation of Yara is based on the original one, but with some extra modules in order to increase the usability of the ruleset with the knowledge extracted with the dynamic and the static analysis of each sample. Basic steps To start writing Yara rules, you can use the official documentation https://yara.readthedocs.org/ where the author explains how to write yara rules . Yara works over... We want to inform you how we are scanning the files with Yara in order to improve the detection of new malware samples. First, we extract the information about dynamic and static analysis and used them together with the APK file to try to match. Then, we decompress the APK and run Yara over these files. If you have any suggestion about the analysis or the Yara scan, you can write us to analysis@koodous.com","title":"Getting started"},{"location":"yara/getting-started/#getting-started","text":"The Yara tool aims to help detection of any kind of malware, but in this case, Android Malware Applications. With Yara rules you can create a \"description\" of malware families to detect new samples. Our implementation of Yara is based on the original one, but with some extra modules in order to increase the usability of the ruleset with the knowledge extracted with the dynamic and the static analysis of each sample.","title":"Getting started"},{"location":"yara/getting-started/#basic-steps","text":"To start writing Yara rules, you can use the official documentation https://yara.readthedocs.org/ where the author explains how to write yara rules .","title":"Basic steps"},{"location":"yara/getting-started/#yara-works-over","text":"We want to inform you how we are scanning the files with Yara in order to improve the detection of new malware samples. First, we extract the information about dynamic and static analysis and used them together with the APK file to try to match. Then, we decompress the APK and run Yara over these files. If you have any suggestion about the analysis or the Yara scan, you can write us to analysis@koodous.com","title":"Yara works over..."}]}